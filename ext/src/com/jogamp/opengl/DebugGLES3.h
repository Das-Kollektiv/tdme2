// Generated from /tdme/lib/jogl-all.jar

#pragma once

#include <fwd-tdme.h>
#include <com/jogamp/common/nio/fwd-tdme.h>
#include <com/jogamp/opengl/fwd-tdme.h>
#include <java/io/fwd-tdme.h>
#include <java/lang/fwd-tdme.h>
#include <java/nio/fwd-tdme.h>
#include <java/lang/Object.h>
#include <com/jogamp/opengl/GLES2.h>
#include <com/jogamp/opengl/GL4ES3.h>
#include <com/jogamp/opengl/GLES3.h>

using java::lang::Object;
using com::jogamp::opengl::GLES2;
using com::jogamp::opengl::GL4ES3;
using com::jogamp::opengl::GLES3;
using com::jogamp::common::nio::PointerBuffer;
using com::jogamp::opengl::GL2;
using com::jogamp::opengl::GL2ES1;
using com::jogamp::opengl::GL2ES2;
using com::jogamp::opengl::GL2ES3;
using com::jogamp::opengl::GL2GL3;
using com::jogamp::opengl::GL3;
using com::jogamp::opengl::GL3ES3;
using com::jogamp::opengl::GL3bc;
using com::jogamp::opengl::GL4;
using com::jogamp::opengl::GL4bc;
using com::jogamp::opengl::GL;
using com::jogamp::opengl::GLArrayData;
using com::jogamp::opengl::GLBufferStorage;
using com::jogamp::opengl::GLContext;
using com::jogamp::opengl::GLES1;
using com::jogamp::opengl::GLProfile;
using com::jogamp::opengl::GLUniformData;
using java::io::Serializable;
using java::lang::CharSequence;
using java::lang::Comparable;
using java::lang::String;
using java::nio::Buffer;
using java::nio::ByteBuffer;
using java::nio::FloatBuffer;
using java::nio::IntBuffer;
using java::nio::LongBuffer;

template<typename ComponentType, typename... Bases> struct SubArray;
namespace java {
namespace io {
typedef ::SubArray< ::java::io::Serializable, ::java::lang::ObjectArray > SerializableArray;
}  // namespace io

namespace lang {
typedef ::SubArray< ::java::lang::CharSequence, ObjectArray > CharSequenceArray;
typedef ::SubArray< ::java::lang::Comparable, ObjectArray > ComparableArray;
typedef ::SubArray< ::java::lang::String, ObjectArray, ::java::io::SerializableArray, ComparableArray, CharSequenceArray > StringArray;
}  // namespace lang
}  // namespace java

using java::io::SerializableArray;
using java::lang::CharSequenceArray;
using java::lang::ComparableArray;
using java::lang::ObjectArray;
using java::lang::StringArray;

struct default_init_tag;
class com::jogamp::opengl::DebugGLES3
	: public virtual Object
	, public virtual GLES2
	, public virtual GL4ES3
	, public virtual GLES3
{

public:
	typedef Object super;
	static bool DEBUG;

private:
	GLContext* _context {  };
	GLES3* downstreamGLES3 {  };

protected:
	void ctor(GLES3* arg0);
	/*void checkContext(); (private) */
	/*int32_t checkGLError(); (private) */

public:
	int32_t getBoundBuffer(int32_t arg0) override;
	int32_t getBoundFramebuffer(int32_t arg0) override;
	GLBufferStorage* getBufferStorage(int32_t arg0) override;
	GLContext* getContext() override;
	int32_t getDefaultDrawFramebuffer() override;
	int32_t getDefaultReadBuffer() override;
	int32_t getDefaultReadFramebuffer() override;
	GL* getDownstreamGL() override;
	Object* getExtension(String* arg0) override;
	GL* getGL() override;
	GL2* getGL2() override;
	GL2ES1* getGL2ES1() override;
	GL2ES2* getGL2ES2() override;
	GL2ES3* getGL2ES3() override;
	GL2GL3* getGL2GL3() override;
	GL3* getGL3() override;
	GL3ES3* getGL3ES3() override;
	GL3bc* getGL3bc() override;
	GL4* getGL4() override;
	GL4ES3* getGL4ES3() override;
	GL4bc* getGL4bc() override;
	GLES1* getGLES1() override;
	GLES2* getGLES2() override;
	GLES3* getGLES3() override;
	GLProfile* getGLProfile() override;
	int32_t getMaxRenderbufferSamples() override;
	Object* getPlatformGLExtensions() override;
	GL* getRootGL() override;
	int32_t getSwapInterval() override;
	void glActiveShaderProgram(int32_t arg0, int32_t arg1) override;
	void glActiveTexture(int32_t arg0) override;
	void glAlphaFuncQCOM(int32_t arg0, float arg1) override;
	void glApplyFramebufferAttachmentCMAAINTEL() override;
	void glAttachShader(int32_t arg0, int32_t arg1) override;
	void glBeginConditionalRender(int32_t arg0, int32_t arg1) override;
	void glBeginQuery(int32_t arg0, int32_t arg1) override;
	void glBeginTransformFeedback(int32_t arg0) override;
	void glBindAttribLocation(int32_t arg0, int32_t arg1, String* arg2) override;
	void glBindBuffer(int32_t arg0, int32_t arg1) override;
	void glBindBufferBase(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glBindBufferRange(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int64_t arg4) override;
	void glBindFragDataLocationEXT(int32_t arg0, int32_t arg1, ByteBuffer* arg2) override;
	void glBindFragDataLocationEXT(int32_t arg0, int32_t arg1, int8_tArray* arg2, int32_t arg3) override;
	void glBindFragDataLocationIndexedEXT(int32_t arg0, int32_t arg1, int32_t arg2, ByteBuffer* arg3) override;
	void glBindFragDataLocationIndexedEXT(int32_t arg0, int32_t arg1, int32_t arg2, int8_tArray* arg3, int32_t arg4) override;
	void glBindFramebuffer(int32_t arg0, int32_t arg1) override;
	void glBindImageTexture(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, int32_t arg4, int32_t arg5, int32_t arg6) override;
	void glBindProgramPipeline(int32_t arg0) override;
	void glBindRenderbuffer(int32_t arg0, int32_t arg1) override;
	void glBindSampler(int32_t arg0, int32_t arg1) override;
	void glBindTexture(int32_t arg0, int32_t arg1) override;
	void glBindTransformFeedback(int32_t arg0, int32_t arg1) override;
	void glBindVertexArray(int32_t arg0) override;
	void glBindVertexArrayOES(int32_t arg0) override;
	void glBindVertexBuffer(int32_t arg0, int32_t arg1, int64_t arg2, int32_t arg3) override;
	void glBlendBarrier() override;
	void glBlendColor(float arg0, float arg1, float arg2, float arg3) override;
	void glBlendEquation(int32_t arg0) override;
	void glBlendEquationSeparate(int32_t arg0, int32_t arg1) override;
	void glBlendEquationSeparatei(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glBlendEquationSeparateiEXT(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glBlendEquationSeparateiOES(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glBlendEquationi(int32_t arg0, int32_t arg1) override;
	void glBlendEquationiEXT(int32_t arg0, int32_t arg1) override;
	void glBlendEquationiOES(int32_t arg0, int32_t arg1) override;
	void glBlendFunc(int32_t arg0, int32_t arg1) override;
	void glBlendFuncSeparate(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glBlendFuncSeparatei(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glBlendFuncSeparateiEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glBlendFuncSeparateiOES(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glBlendFunci(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glBlendFunciEXT(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glBlendFunciOES(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glBlitFramebuffer(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9) override;
	void glBlitFramebufferANGLE(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9) override;
	void glBlitFramebufferNV(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9) override;
	void glBufferData(int32_t arg0, int64_t arg1, Buffer* arg2, int32_t arg3) override;
	void glBufferStorageEXT(int32_t arg0, int64_t arg1, Buffer* arg2, int32_t arg3) override;
	void glBufferSubData(int32_t arg0, int64_t arg1, int64_t arg2, Buffer* arg3) override;
	int32_t glCheckFramebufferStatus(int32_t arg0) override;
	void glClear(int32_t arg0) override;
	void glClearBufferfi(int32_t arg0, int32_t arg1, float arg2, int32_t arg3) override;
	void glClearBufferfv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glClearBufferfv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glClearBufferiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glClearBufferiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glClearBufferuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glClearBufferuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glClearColor(float arg0, float arg1, float arg2, float arg3) override;
	void glClearDepth(double arg0) override;
	void glClearDepthf(float arg0) override;
	void glClearStencil(int32_t arg0) override;
	int32_t glClientWaitSync(int64_t arg0, int32_t arg1, int64_t arg2) override;
	void glColorMask(bool arg0, bool arg1, bool arg2, bool arg3) override;
	void glColorMaski(int32_t arg0, bool arg1, bool arg2, bool arg3, bool arg4) override;
	void glColorMaskiEXT(int32_t arg0, bool arg1, bool arg2, bool arg3, bool arg4) override;
	void glColorMaskiOES(int32_t arg0, bool arg1, bool arg2, bool arg3, bool arg4) override;
	void glCompileShader(int32_t arg0) override;
	void glCompressedTexImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, Buffer* arg7) override;
	void glCompressedTexImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int64_t arg7) override;
	void glCompressedTexImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int64_t arg8) override;
	void glCompressedTexImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, Buffer* arg8) override;
	void glCompressedTexSubImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, Buffer* arg8) override;
	void glCompressedTexSubImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int64_t arg8) override;
	void glCompressedTexSubImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, Buffer* arg10) override;
	void glCompressedTexSubImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, int64_t arg10) override;
	void glCopyBufferSubData(int32_t arg0, int32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) override;
	void glCopyBufferSubDataNV(int32_t arg0, int32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) override;
	void glCopyImageSubData(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, int32_t arg10, int32_t arg11, int32_t arg12, int32_t arg13, int32_t arg14) override;
	void glCopyTexImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7) override;
	void glCopyTexSubImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7) override;
	void glCopyTexSubImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8) override;
	void glCopyTextureLevelsAPPLE(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glCoverageMaskNV(bool arg0) override;
	void glCoverageModulationNV(int32_t arg0) override;
	void glCoverageModulationTableNV(int32_t arg0, FloatBuffer* arg1) override;
	void glCoverageModulationTableNV(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	void glCoverageOperationNV(int32_t arg0) override;
	int32_t glCreateProgram() override;
	int32_t glCreateShader(int32_t arg0) override;
	int32_t glCreateShaderProgramv(int32_t arg0, int32_t arg1, StringArray* arg2) override;
	void glCullFace(int32_t arg0) override;
	void glDebugMessageControl(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, IntBuffer* arg4, bool arg5) override;
	void glDebugMessageControl(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5, bool arg6) override;
	void glDebugMessageInsert(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, String* arg5) override;
	void glDeleteBuffers(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteBuffers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteFramebuffers(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteFramebuffers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteProgram(int32_t arg0) override;
	void glDeleteProgramPipelines(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteProgramPipelines(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteQueries(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteQueries(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteRenderbuffers(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteRenderbuffers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteSamplers(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteSamplers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteShader(int32_t arg0) override;
	void glDeleteSync(int64_t arg0) override;
	void glDeleteTextures(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteTextures(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteTransformFeedbacks(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteTransformFeedbacks(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteVertexArrays(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteVertexArrays(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDeleteVertexArraysOES(int32_t arg0, IntBuffer* arg1) override;
	void glDeleteVertexArraysOES(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDepthFunc(int32_t arg0) override;
	void glDepthMask(bool arg0) override;
	void glDepthRange(double arg0, double arg1) override;
	void glDepthRangeArrayfvNV(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glDepthRangeArrayfvNV(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glDepthRangeIndexedfNV(int32_t arg0, float arg1, float arg2) override;
	void glDepthRangef(float arg0, float arg1) override;
	void glDetachShader(int32_t arg0, int32_t arg1) override;
	void glDisable(int32_t arg0) override;
	void glDisableDriverControlQCOM(int32_t arg0) override;
	void glDisableVertexAttribArray(int32_t arg0) override;
	void glDisablei(int32_t arg0, int32_t arg1) override;
	void glDisableiEXT(int32_t arg0, int32_t arg1) override;
	void glDisableiNV(int32_t arg0, int32_t arg1) override;
	void glDisableiOES(int32_t arg0, int32_t arg1) override;
	void glDiscardFramebufferEXT(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glDiscardFramebufferEXT(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glDispatchCompute(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glDispatchComputeIndirect(int64_t arg0) override;
	void glDrawArrays(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glDrawArraysIndirect(int32_t arg0, int64_t arg1) override;
	void glDrawArraysIndirect(int32_t arg0, Buffer* arg1) override;
	void glDrawArraysInstanced(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glDrawArraysInstancedANGLE(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glDrawArraysInstancedBaseInstance(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glDrawArraysInstancedNV(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glDrawBuffers(int32_t arg0, IntBuffer* arg1) override;
	void glDrawBuffers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glDrawBuffersIndexedEXT(int32_t arg0, IntBuffer* arg1, IntBuffer* arg2) override;
	void glDrawBuffersIndexedEXT(int32_t arg0, int32_tArray* arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glDrawElements(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3) override;
	void glDrawElements(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3) override;
	void glDrawElementsBaseVertex(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4) override;
	void glDrawElementsBaseVertex(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int32_t arg4) override;
	void glDrawElementsBaseVertexEXT(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4) override;
	void glDrawElementsBaseVertexOES(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4) override;
	void glDrawElementsIndirect(int32_t arg0, int32_t arg1, Buffer* arg2) override;
	void glDrawElementsIndirect(int32_t arg0, int32_t arg1, int64_t arg2) override;
	void glDrawElementsInstanced(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4) override;
	void glDrawElementsInstanced(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int32_t arg4) override;
	void glDrawElementsInstancedANGLE(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4) override;
	void glDrawElementsInstancedBaseInstance(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int32_t arg4, int32_t arg5) override;
	void glDrawElementsInstancedBaseVertex(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int32_t arg4, int32_t arg5) override;
	void glDrawElementsInstancedBaseVertex(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4, int32_t arg5) override;
	void glDrawElementsInstancedBaseVertexBaseInstance(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int32_t arg4, int32_t arg5, int32_t arg6) override;
	void glDrawElementsInstancedBaseVertexEXT(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4, int32_t arg5) override;
	void glDrawElementsInstancedBaseVertexOES(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4, int32_t arg5) override;
	void glDrawElementsInstancedNV(int32_t arg0, int32_t arg1, int32_t arg2, Buffer* arg3, int32_t arg4) override;
	void glDrawRangeElements(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int64_t arg5) override;
	void glDrawRangeElements(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, Buffer* arg5) override;
	void glDrawRangeElementsBaseVertex(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int64_t arg5, int32_t arg6) override;
	void glDrawRangeElementsBaseVertex(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, Buffer* arg5, int32_t arg6) override;
	void glDrawRangeElementsBaseVertexEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, Buffer* arg5, int32_t arg6) override;
	void glDrawRangeElementsBaseVertexOES(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, Buffer* arg5, int32_t arg6) override;
	void glEGLImageTargetRenderbufferStorageOES(int32_t arg0, int64_t arg1) override;
	void glEGLImageTargetTexture2DOES(int32_t arg0, int64_t arg1) override;
	void glEnable(int32_t arg0) override;
	void glEnableDriverControlQCOM(int32_t arg0) override;
	void glEnableVertexAttribArray(int32_t arg0) override;
	void glEnablei(int32_t arg0, int32_t arg1) override;
	void glEnableiEXT(int32_t arg0, int32_t arg1) override;
	void glEnableiNV(int32_t arg0, int32_t arg1) override;
	void glEnableiOES(int32_t arg0, int32_t arg1) override;
	void glEndConditionalRender() override;
	void glEndQuery(int32_t arg0) override;
	void glEndTilingQCOM(int32_t arg0) override;
	void glEndTransformFeedback() override;
	void glExtGetBufferPointervQCOM(int32_t arg0, PointerBuffer* arg1) override;
	void glExtGetBuffersQCOM(IntBuffer* arg0, int32_t arg1, IntBuffer* arg2) override;
	void glExtGetBuffersQCOM(int32_tArray* arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glExtGetFramebuffersQCOM(IntBuffer* arg0, int32_t arg1, IntBuffer* arg2) override;
	void glExtGetFramebuffersQCOM(int32_tArray* arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glExtGetProgramBinarySourceQCOM(int32_t arg0, int32_t arg1, ByteBuffer* arg2, IntBuffer* arg3) override;
	void glExtGetProgramBinarySourceQCOM(int32_t arg0, int32_t arg1, int8_tArray* arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5) override;
	void glExtGetProgramsQCOM(IntBuffer* arg0, int32_t arg1, IntBuffer* arg2) override;
	void glExtGetProgramsQCOM(int32_tArray* arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glExtGetRenderbuffersQCOM(IntBuffer* arg0, int32_t arg1, IntBuffer* arg2) override;
	void glExtGetRenderbuffersQCOM(int32_tArray* arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glExtGetShadersQCOM(IntBuffer* arg0, int32_t arg1, IntBuffer* arg2) override;
	void glExtGetShadersQCOM(int32_tArray* arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glExtGetTexLevelParameterivQCOM(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, IntBuffer* arg4) override;
	void glExtGetTexLevelParameterivQCOM(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5) override;
	void glExtGetTexSubImageQCOM(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, Buffer* arg10) override;
	void glExtGetTexturesQCOM(IntBuffer* arg0, int32_t arg1, IntBuffer* arg2) override;
	void glExtGetTexturesQCOM(int32_tArray* arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	bool glExtIsProgramBinaryQCOM(int32_t arg0) override;
	void glExtTexObjectStateOverrideiQCOM(int32_t arg0, int32_t arg1, int32_t arg2) override;
	int64_t glFenceSync(int32_t arg0, int32_t arg1) override;
	void glFinish() override;
	void glFlush() override;
	void glFlushMappedBufferRange(int32_t arg0, int64_t arg1, int64_t arg2) override;
	void glFragmentCoverageColorNV(int32_t arg0) override;
	void glFramebufferParameteri(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glFramebufferRenderbuffer(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glFramebufferSampleLocationsfvNV(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glFramebufferSampleLocationsfvNV(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glFramebufferTexture(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glFramebufferTexture2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glFramebufferTexture2DMultisampleEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glFramebufferTexture2DMultisampleIMG(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glFramebufferTexture3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glFramebufferTextureEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glFramebufferTextureLayer(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glFramebufferTextureMultiviewOVR(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glFramebufferTextureOES(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glFrontFace(int32_t arg0) override;
	void glGenBuffers(int32_t arg0, IntBuffer* arg1) override;
	void glGenBuffers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenFramebuffers(int32_t arg0, IntBuffer* arg1) override;
	void glGenFramebuffers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenProgramPipelines(int32_t arg0, IntBuffer* arg1) override;
	void glGenProgramPipelines(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenQueries(int32_t arg0, IntBuffer* arg1) override;
	void glGenQueries(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenRenderbuffers(int32_t arg0, IntBuffer* arg1) override;
	void glGenRenderbuffers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenSamplers(int32_t arg0, IntBuffer* arg1) override;
	void glGenSamplers(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenTextures(int32_t arg0, IntBuffer* arg1) override;
	void glGenTextures(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenTransformFeedbacks(int32_t arg0, IntBuffer* arg1) override;
	void glGenTransformFeedbacks(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenVertexArrays(int32_t arg0, IntBuffer* arg1) override;
	void glGenVertexArrays(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenVertexArraysOES(int32_t arg0, IntBuffer* arg1) override;
	void glGenVertexArraysOES(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGenerateMipmap(int32_t arg0) override;
	void glGetActiveAttrib(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3, IntBuffer* arg4, IntBuffer* arg5, ByteBuffer* arg6) override;
	void glGetActiveAttrib(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4, int32_tArray* arg5, int32_t arg6, int32_tArray* arg7, int32_t arg8, int8_tArray* arg9, int32_t arg10) override;
	void glGetActiveUniform(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3, IntBuffer* arg4, IntBuffer* arg5, ByteBuffer* arg6) override;
	void glGetActiveUniform(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4, int32_tArray* arg5, int32_t arg6, int32_tArray* arg7, int32_t arg8, int8_tArray* arg9, int32_t arg10) override;
	void glGetActiveUniformBlockName(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3, ByteBuffer* arg4) override;
	void glGetActiveUniformBlockName(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4, int8_tArray* arg5, int32_t arg6) override;
	void glGetActiveUniformBlockiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glGetActiveUniformBlockiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glGetActiveUniformsiv(int32_t arg0, int32_t arg1, IntBuffer* arg2, int32_t arg3, IntBuffer* arg4) override;
	void glGetActiveUniformsiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int32_t arg4, int32_tArray* arg5, int32_t arg6) override;
	void glGetAttachedShaders(int32_t arg0, int32_t arg1, IntBuffer* arg2, IntBuffer* arg3) override;
	void glGetAttachedShaders(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5) override;
	int32_t glGetAttribLocation(int32_t arg0, String* arg1) override;
	void glGetBooleani_v(int32_t arg0, int32_t arg1, ByteBuffer* arg2) override;
	void glGetBooleani_v(int32_t arg0, int32_t arg1, int8_tArray* arg2, int32_t arg3) override;
	void glGetBooleanv(int32_t arg0, ByteBuffer* arg1) override;
	void glGetBooleanv(int32_t arg0, int8_tArray* arg1, int32_t arg2) override;
	void glGetBufferParameteri64v(int32_t arg0, int32_t arg1, LongBuffer* arg2) override;
	void glGetBufferParameteri64v(int32_t arg0, int32_t arg1, int64_tArray* arg2, int32_t arg3) override;
	void glGetBufferParameteriv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetBufferParameteriv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetCoverageModulationTableNV(int32_t arg0, FloatBuffer* arg1) override;
	void glGetCoverageModulationTableNV(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	int32_t glGetDebugMessageLog(int32_t arg0, int32_t arg1, IntBuffer* arg2, IntBuffer* arg3, IntBuffer* arg4, IntBuffer* arg5, IntBuffer* arg6, ByteBuffer* arg7) override;
	int32_t glGetDebugMessageLog(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5, int32_tArray* arg6, int32_t arg7, int32_tArray* arg8, int32_t arg9, int32_tArray* arg10, int32_t arg11, int8_tArray* arg12, int32_t arg13) override;
	void glGetDriverControlStringQCOM(int32_t arg0, int32_t arg1, IntBuffer* arg2, ByteBuffer* arg3) override;
	void glGetDriverControlStringQCOM(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int8_tArray* arg4, int32_t arg5) override;
	void glGetDriverControlsQCOM(IntBuffer* arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetDriverControlsQCOM(int32_tArray* arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	int32_t glGetError() override;
	void glGetFloati_vNV(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glGetFloati_vNV(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glGetFloatv(int32_t arg0, FloatBuffer* arg1) override;
	void glGetFloatv(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	int32_t glGetFragDataIndexEXT(int32_t arg0, ByteBuffer* arg1) override;
	int32_t glGetFragDataIndexEXT(int32_t arg0, int8_tArray* arg1, int32_t arg2) override;
	int32_t glGetFragDataLocation(int32_t arg0, String* arg1) override;
	void glGetFramebufferAttachmentParameteriv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glGetFramebufferAttachmentParameteriv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glGetFramebufferParameteriv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetFramebufferParameteriv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	int32_t glGetGraphicsResetStatus() override;
	void glGetInteger64i_v(int32_t arg0, int32_t arg1, LongBuffer* arg2) override;
	void glGetInteger64i_v(int32_t arg0, int32_t arg1, int64_tArray* arg2, int32_t arg3) override;
	void glGetInteger64v(int32_t arg0, LongBuffer* arg1) override;
	void glGetInteger64v(int32_t arg0, int64_tArray* arg1, int32_t arg2) override;
	void glGetIntegeri_v(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetIntegeri_v(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetIntegeri_vEXT(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetIntegeri_vEXT(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetIntegerv(int32_t arg0, IntBuffer* arg1) override;
	void glGetIntegerv(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glGetInternalformativ(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, IntBuffer* arg4) override;
	void glGetInternalformativ(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5) override;
	void glGetMultisamplefv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glGetMultisamplefv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glGetObjectLabel(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3, ByteBuffer* arg4) override;
	void glGetObjectLabel(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4, int8_tArray* arg5, int32_t arg6) override;
	void glGetObjectPtrLabel(Buffer* arg0, int32_t arg1, IntBuffer* arg2, ByteBuffer* arg3) override;
	void glGetObjectPtrLabel(Buffer* arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int8_tArray* arg4, int32_t arg5) override;
	void glGetProgramBinary(int32_t arg0, int32_t arg1, IntBuffer* arg2, IntBuffer* arg3, Buffer* arg4) override;
	void glGetProgramBinary(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5, Buffer* arg6) override;
	void glGetProgramInfoLog(int32_t arg0, int32_t arg1, IntBuffer* arg2, ByteBuffer* arg3) override;
	void glGetProgramInfoLog(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int8_tArray* arg4, int32_t arg5) override;
	void glGetProgramInterfaceiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glGetProgramInterfaceiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glGetProgramPipelineInfoLog(int32_t arg0, int32_t arg1, IntBuffer* arg2, ByteBuffer* arg3) override;
	void glGetProgramPipelineInfoLog(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int8_tArray* arg4, int32_t arg5) override;
	void glGetProgramPipelineiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetProgramPipelineiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	int32_t glGetProgramResourceIndex(int32_t arg0, int32_t arg1, ByteBuffer* arg2) override;
	int32_t glGetProgramResourceIndex(int32_t arg0, int32_t arg1, int8_tArray* arg2, int32_t arg3) override;
	int32_t glGetProgramResourceLocation(int32_t arg0, int32_t arg1, ByteBuffer* arg2) override;
	int32_t glGetProgramResourceLocation(int32_t arg0, int32_t arg1, int8_tArray* arg2, int32_t arg3) override;
	int32_t glGetProgramResourceLocationIndexEXT(int32_t arg0, int32_t arg1, ByteBuffer* arg2) override;
	int32_t glGetProgramResourceLocationIndexEXT(int32_t arg0, int32_t arg1, int8_tArray* arg2, int32_t arg3) override;
	void glGetProgramResourceName(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, IntBuffer* arg4, ByteBuffer* arg5) override;
	void glGetProgramResourceName(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5, int8_tArray* arg6, int32_t arg7) override;
	void glGetProgramResourceiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, IntBuffer* arg4, int32_t arg5, IntBuffer* arg6, IntBuffer* arg7) override;
	void glGetProgramResourceiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5, int32_t arg6, int32_tArray* arg7, int32_t arg8, int32_tArray* arg9, int32_t arg10) override;
	void glGetProgramiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetProgramiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetQueryObjecti64v(int32_t arg0, int32_t arg1, LongBuffer* arg2) override;
	void glGetQueryObjecti64v(int32_t arg0, int32_t arg1, int64_tArray* arg2, int32_t arg3) override;
	void glGetQueryObjectiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetQueryObjectiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetQueryObjectui64v(int32_t arg0, int32_t arg1, LongBuffer* arg2) override;
	void glGetQueryObjectui64v(int32_t arg0, int32_t arg1, int64_tArray* arg2, int32_t arg3) override;
	void glGetQueryObjectuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetQueryObjectuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetQueryiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetQueryiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetRenderbufferParameteriv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetRenderbufferParameteriv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetSamplerParameterIiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetSamplerParameterIiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetSamplerParameterIuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetSamplerParameterIuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetSamplerParameterfv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glGetSamplerParameterfv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glGetSamplerParameteriv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetSamplerParameteriv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetShaderInfoLog(int32_t arg0, int32_t arg1, IntBuffer* arg2, ByteBuffer* arg3) override;
	void glGetShaderInfoLog(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int8_tArray* arg4, int32_t arg5) override;
	void glGetShaderPrecisionFormat(int32_t arg0, int32_t arg1, IntBuffer* arg2, IntBuffer* arg3) override;
	void glGetShaderPrecisionFormat(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int32_tArray* arg4, int32_t arg5) override;
	void glGetShaderSource(int32_t arg0, int32_t arg1, IntBuffer* arg2, ByteBuffer* arg3) override;
	void glGetShaderSource(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int8_tArray* arg4, int32_t arg5) override;
	void glGetShaderiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetShaderiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	String* glGetString(int32_t arg0) override;
	String* glGetStringi(int32_t arg0, int32_t arg1) override;
	void glGetSynciv(int64_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3, IntBuffer* arg4) override;
	void glGetSynciv(int64_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4, int32_tArray* arg5, int32_t arg6) override;
	void glGetTexLevelParameterfv(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glGetTexLevelParameterfv(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glGetTexLevelParameteriv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glGetTexLevelParameteriv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glGetTexParameterIiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetTexParameterIiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetTexParameterIuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetTexParameterIuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetTexParameterfv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glGetTexParameterfv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glGetTexParameteriv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetTexParameteriv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetTransformFeedbackVarying(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3, IntBuffer* arg4, IntBuffer* arg5, ByteBuffer* arg6) override;
	void glGetTransformFeedbackVarying(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4, int32_tArray* arg5, int32_t arg6, int32_tArray* arg7, int32_t arg8, int8_tArray* arg9, int32_t arg10) override;
	void glGetTranslatedShaderSourceANGLE(int32_t arg0, int32_t arg1, IntBuffer* arg2, ByteBuffer* arg3) override;
	void glGetTranslatedShaderSourceANGLE(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int8_tArray* arg4, int32_t arg5) override;
	int32_t glGetUniformBlockIndex(int32_t arg0, String* arg1) override;
	void glGetUniformIndices(int32_t arg0, int32_t arg1, StringArray* arg2, IntBuffer* arg3) override;
	void glGetUniformIndices(int32_t arg0, int32_t arg1, StringArray* arg2, int32_tArray* arg3, int32_t arg4) override;
	int32_t glGetUniformLocation(int32_t arg0, String* arg1) override;
	void glGetUniformfv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glGetUniformfv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glGetUniformiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetUniformiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetUniformuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetUniformuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetVertexAttribIiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetVertexAttribIiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetVertexAttribIuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetVertexAttribIuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetVertexAttribfv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glGetVertexAttribfv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glGetVertexAttribiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glGetVertexAttribiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glGetnUniformfv(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glGetnUniformfv(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glGetnUniformiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glGetnUniformiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glGetnUniformuiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glGetnUniformuiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glHint(int32_t arg0, int32_t arg1) override;
	void glInvalidateFramebuffer(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glInvalidateFramebuffer(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glInvalidateSubFramebuffer(int32_t arg0, int32_t arg1, IntBuffer* arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6) override;
	void glInvalidateSubFramebuffer(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7) override;
	bool glIsBuffer(int32_t arg0) override;
	bool glIsEnabled(int32_t arg0) override;
	bool glIsEnabledi(int32_t arg0, int32_t arg1) override;
	bool glIsEnablediEXT(int32_t arg0, int32_t arg1) override;
	bool glIsEnablediNV(int32_t arg0, int32_t arg1) override;
	bool glIsEnablediOES(int32_t arg0, int32_t arg1) override;
	bool glIsFramebuffer(int32_t arg0) override;
	bool glIsProgram(int32_t arg0) override;
	bool glIsProgramPipeline(int32_t arg0) override;
	bool glIsQuery(int32_t arg0) override;
	bool glIsRenderbuffer(int32_t arg0) override;
	bool glIsSampler(int32_t arg0) override;
	bool glIsShader(int32_t arg0) override;
	bool glIsSync(int64_t arg0) override;
	bool glIsTexture(int32_t arg0) override;
	bool glIsTransformFeedback(int32_t arg0) override;
	bool glIsVertexArray(int32_t arg0) override;
	bool glIsVertexArrayOES(int32_t arg0) override;
	void glLineWidth(float arg0) override;
	void glLinkProgram(int32_t arg0) override;
	ByteBuffer* glMapBuffer(int32_t arg0, int32_t arg1) override;
	ByteBuffer* glMapBufferRange(int32_t arg0, int64_t arg1, int64_t arg2, int32_t arg3) override;
	void glMemoryBarrier(int32_t arg0) override;
	void glMemoryBarrierByRegion(int32_t arg0) override;
	void glMinSampleShading(float arg0) override;
	void glMinSampleShadingOES(float arg0) override;
	void glMultiDrawArraysIndirectEXT(int32_t arg0, Buffer* arg1, int32_t arg2, int32_t arg3) override;
	void glMultiDrawElementsBaseVertexEXT(int32_t arg0, IntBuffer* arg1, int32_t arg2, PointerBuffer* arg3, int32_t arg4, IntBuffer* arg5) override;
	void glMultiDrawElementsBaseVertexEXT(int32_t arg0, int32_tArray* arg1, int32_t arg2, int32_t arg3, PointerBuffer* arg4, int32_t arg5, int32_tArray* arg6, int32_t arg7) override;
	void glMultiDrawElementsBaseVertexOES(int32_t arg0, IntBuffer* arg1, int32_t arg2, PointerBuffer* arg3, int32_t arg4, IntBuffer* arg5) override;
	void glMultiDrawElementsBaseVertexOES(int32_t arg0, int32_tArray* arg1, int32_t arg2, int32_t arg3, PointerBuffer* arg4, int32_t arg5, int32_tArray* arg6, int32_t arg7) override;
	void glMultiDrawElementsIndirectEXT(int32_t arg0, int32_t arg1, Buffer* arg2, int32_t arg3, int32_t arg4) override;
	void glNamedFramebufferSampleLocationsfvNV(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glNamedFramebufferSampleLocationsfvNV(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glObjectLabel(int32_t arg0, int32_t arg1, int32_t arg2, ByteBuffer* arg3) override;
	void glObjectLabel(int32_t arg0, int32_t arg1, int32_t arg2, int8_tArray* arg3, int32_t arg4) override;
	void glObjectPtrLabel(Buffer* arg0, int32_t arg1, ByteBuffer* arg2) override;
	void glObjectPtrLabel(Buffer* arg0, int32_t arg1, int8_tArray* arg2, int32_t arg3) override;
	void glPatchParameteri(int32_t arg0, int32_t arg1) override;
	void glPatchParameteriEXT(int32_t arg0, int32_t arg1) override;
	void glPatchParameteriOES(int32_t arg0, int32_t arg1) override;
	void glPauseTransformFeedback() override;
	void glPixelStorei(int32_t arg0, int32_t arg1) override;
	void glPolygonModeNV(int32_t arg0, int32_t arg1) override;
	void glPolygonOffset(float arg0, float arg1) override;
	void glPopDebugGroup() override;
	void glPrimitiveBoundingBox(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7) override;
	void glPrimitiveBoundingBoxEXT(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7) override;
	void glPrimitiveBoundingBoxOES(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7) override;
	void glProgramBinary(int32_t arg0, int32_t arg1, Buffer* arg2, int32_t arg3) override;
	void glProgramParameteri(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glProgramUniform1f(int32_t arg0, int32_t arg1, float arg2) override;
	void glProgramUniform1fv(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glProgramUniform1fv(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glProgramUniform1i(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glProgramUniform1iv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform1iv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniform1ui(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glProgramUniform1uiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform1uiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniform2f(int32_t arg0, int32_t arg1, float arg2, float arg3) override;
	void glProgramUniform2fv(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glProgramUniform2fv(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glProgramUniform2i(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glProgramUniform2iv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform2iv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniform2ui(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glProgramUniform2uiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform2uiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniform3f(int32_t arg0, int32_t arg1, float arg2, float arg3, float arg4) override;
	void glProgramUniform3fv(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glProgramUniform3fv(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glProgramUniform3i(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glProgramUniform3iv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform3iv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniform3ui(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glProgramUniform3uiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform3uiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniform4f(int32_t arg0, int32_t arg1, float arg2, float arg3, float arg4, float arg5) override;
	void glProgramUniform4fv(int32_t arg0, int32_t arg1, int32_t arg2, FloatBuffer* arg3) override;
	void glProgramUniform4fv(int32_t arg0, int32_t arg1, int32_t arg2, floatArray* arg3, int32_t arg4) override;
	void glProgramUniform4i(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glProgramUniform4iv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform4iv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniform4ui(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glProgramUniform4uiv(int32_t arg0, int32_t arg1, int32_t arg2, IntBuffer* arg3) override;
	void glProgramUniform4uiv(int32_t arg0, int32_t arg1, int32_t arg2, int32_tArray* arg3, int32_t arg4) override;
	void glProgramUniformMatrix2fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix2fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix2x3fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix2x3fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix2x4fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix2x4fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix3fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix3fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix3x2fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix3x2fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix3x4fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix3x4fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix4fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix4fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix4x2fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix4x2fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glProgramUniformMatrix4x3fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, FloatBuffer* arg4) override;
	void glProgramUniformMatrix4x3fv(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, floatArray* arg4, int32_t arg5) override;
	void glPushDebugGroup(int32_t arg0, int32_t arg1, int32_t arg2, ByteBuffer* arg3) override;
	void glPushDebugGroup(int32_t arg0, int32_t arg1, int32_t arg2, int8_tArray* arg3, int32_t arg4) override;
	void glQueryCounter(int32_t arg0, int32_t arg1) override;
	void glRasterSamplesEXT(int32_t arg0, bool arg1) override;
	void glReadBuffer(int32_t arg0) override;
	void glReadBufferIndexedEXT(int32_t arg0, int32_t arg1) override;
	void glReadBufferNV(int32_t arg0) override;
	void glReadPixels(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int64_t arg6) override;
	void glReadPixels(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, Buffer* arg6) override;
	void glReadnPixels(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, Buffer* arg7) override;
	void glReleaseShaderCompiler() override;
	void glRenderbufferStorage(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glRenderbufferStorageMultisample(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glRenderbufferStorageMultisampleEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glRenderbufferStorageMultisampleIMG(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glRenderbufferStorageMultisampleNV(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glResolveDepthValuesNV() override;
	void glResolveMultisampleFramebuffer() override;
	void glResumeTransformFeedback() override;
	void glSampleCoverage(float arg0, bool arg1) override;
	void glSampleMaski(int32_t arg0, int32_t arg1) override;
	void glSamplerParameterIiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glSamplerParameterIiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glSamplerParameterIuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glSamplerParameterIuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glSamplerParameterf(int32_t arg0, int32_t arg1, float arg2) override;
	void glSamplerParameterfv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glSamplerParameterfv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glSamplerParameteri(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glSamplerParameteriv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glSamplerParameteriv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glScissor(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glScissorArrayvNV(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glScissorArrayvNV(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glScissorIndexedNV(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glScissorIndexedvNV(int32_t arg0, IntBuffer* arg1) override;
	void glScissorIndexedvNV(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glShaderBinary(int32_t arg0, IntBuffer* arg1, int32_t arg2, Buffer* arg3, int32_t arg4) override;
	void glShaderBinary(int32_t arg0, int32_tArray* arg1, int32_t arg2, int32_t arg3, Buffer* arg4, int32_t arg5) override;
	void glShaderSource(int32_t arg0, int32_t arg1, StringArray* arg2, IntBuffer* arg3) override;
	void glShaderSource(int32_t arg0, int32_t arg1, StringArray* arg2, int32_tArray* arg3, int32_t arg4) override;
	void glStartTilingQCOM(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glStencilFunc(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glStencilFuncSeparate(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glStencilMask(int32_t arg0) override;
	void glStencilMaskSeparate(int32_t arg0, int32_t arg1) override;
	void glStencilOp(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glStencilOpSeparate(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glSubpixelPrecisionBiasNV(int32_t arg0, int32_t arg1) override;
	void glTexBuffer(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glTexBufferEXT(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glTexBufferOES(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glTexBufferRange(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int64_t arg4) override;
	void glTexBufferRangeEXT(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int64_t arg4) override;
	void glTexBufferRangeOES(int32_t arg0, int32_t arg1, int32_t arg2, int64_t arg3, int64_t arg4) override;
	void glTexImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int64_t arg8) override;
	void glTexImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, Buffer* arg8) override;
	void glTexImage2DMultisample(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, bool arg5) override;
	void glTexImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, Buffer* arg9) override;
	void glTexImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int64_t arg9) override;
	void glTexImage3DMultisample(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, bool arg6) override;
	void glTexPageCommitmentEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, bool arg8) override;
	void glTexParameterIiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glTexParameterIiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glTexParameterIuiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glTexParameterIuiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glTexParameterf(int32_t arg0, int32_t arg1, float arg2) override;
	void glTexParameterfv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glTexParameterfv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glTexParameteri(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glTexParameteriv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glTexParameteriv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glTexStorage1D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glTexStorage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glTexStorage2DMultisample(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, bool arg5) override;
	void glTexStorage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glTexStorage3DMultisample(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, bool arg6) override;
	void glTexStorage3DMultisampleOES(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, bool arg6) override;
	void glTexSubImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, Buffer* arg8) override;
	void glTexSubImage2D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int64_t arg8) override;
	void glTexSubImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, Buffer* arg10) override;
	void glTexSubImage3D(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, int64_t arg10) override;
	void glTextureStorage1DEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glTextureStorage2DEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) override;
	void glTextureStorage3DEXT(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6) override;
	void glTextureView(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7) override;
	void glTransformFeedbackVaryings(int32_t arg0, int32_t arg1, StringArray* arg2, int32_t arg3) override;
	void glUniform(GLUniformData* arg0) override;
	void glUniform1f(int32_t arg0, float arg1) override;
	void glUniform1fv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glUniform1fv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glUniform1i(int32_t arg0, int32_t arg1) override;
	void glUniform1iv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform1iv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniform1ui(int32_t arg0, int32_t arg1) override;
	void glUniform1uiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform1uiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniform2f(int32_t arg0, float arg1, float arg2) override;
	void glUniform2fv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glUniform2fv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glUniform2i(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glUniform2iv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform2iv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniform2ui(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glUniform2uiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform2uiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniform3f(int32_t arg0, float arg1, float arg2, float arg3) override;
	void glUniform3fv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glUniform3fv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glUniform3i(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glUniform3iv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform3iv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniform3ui(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glUniform3uiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform3uiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniform4f(int32_t arg0, float arg1, float arg2, float arg3, float arg4) override;
	void glUniform4fv(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glUniform4fv(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glUniform4i(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glUniform4iv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform4iv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniform4ui(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glUniform4uiv(int32_t arg0, int32_t arg1, IntBuffer* arg2) override;
	void glUniform4uiv(int32_t arg0, int32_t arg1, int32_tArray* arg2, int32_t arg3) override;
	void glUniformBlockBinding(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glUniformMatrix2fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix2fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix2x3fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix2x3fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix2x3fvNV(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix2x3fvNV(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix2x4fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix2x4fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix2x4fvNV(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix2x4fvNV(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix3fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix3fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix3x2fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix3x2fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix3x2fvNV(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix3x2fvNV(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix3x4fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix3x4fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix3x4fvNV(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix3x4fvNV(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix4fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix4fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix4x2fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix4x2fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix4x2fvNV(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix4x2fvNV(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix4x3fv(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix4x3fv(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	void glUniformMatrix4x3fvNV(int32_t arg0, int32_t arg1, bool arg2, FloatBuffer* arg3) override;
	void glUniformMatrix4x3fvNV(int32_t arg0, int32_t arg1, bool arg2, floatArray* arg3, int32_t arg4) override;
	bool glUnmapBuffer(int32_t arg0) override;
	void glUseProgram(int32_t arg0) override;
	void glUseProgramStages(int32_t arg0, int32_t arg1, int32_t arg2) override;
	void glValidateProgram(int32_t arg0) override;
	void glValidateProgramPipeline(int32_t arg0) override;
	void glVertexAttrib1f(int32_t arg0, float arg1) override;
	void glVertexAttrib1fv(int32_t arg0, FloatBuffer* arg1) override;
	void glVertexAttrib1fv(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	void glVertexAttrib2f(int32_t arg0, float arg1, float arg2) override;
	void glVertexAttrib2fv(int32_t arg0, FloatBuffer* arg1) override;
	void glVertexAttrib2fv(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	void glVertexAttrib3f(int32_t arg0, float arg1, float arg2, float arg3) override;
	void glVertexAttrib3fv(int32_t arg0, FloatBuffer* arg1) override;
	void glVertexAttrib3fv(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	void glVertexAttrib4f(int32_t arg0, float arg1, float arg2, float arg3, float arg4) override;
	void glVertexAttrib4fv(int32_t arg0, FloatBuffer* arg1) override;
	void glVertexAttrib4fv(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	void glVertexAttribBinding(int32_t arg0, int32_t arg1) override;
	void glVertexAttribDivisor(int32_t arg0, int32_t arg1) override;
	void glVertexAttribDivisorANGLE(int32_t arg0, int32_t arg1) override;
	void glVertexAttribDivisorNV(int32_t arg0, int32_t arg1) override;
	void glVertexAttribFormat(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, int32_t arg4) override;
	void glVertexAttribI4i(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glVertexAttribI4iv(int32_t arg0, IntBuffer* arg1) override;
	void glVertexAttribI4iv(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glVertexAttribI4ui(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) override;
	void glVertexAttribI4uiv(int32_t arg0, IntBuffer* arg1) override;
	void glVertexAttribI4uiv(int32_t arg0, int32_tArray* arg1, int32_t arg2) override;
	void glVertexAttribIFormat(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glVertexAttribIPointer(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, int64_t arg4) override;
	void glVertexAttribIPointer(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3, Buffer* arg4) override;
	void glVertexAttribPointer(GLArrayData* arg0) override;
	void glVertexAttribPointer(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, int32_t arg4, Buffer* arg5) override;
	void glVertexAttribPointer(int32_t arg0, int32_t arg1, int32_t arg2, bool arg3, int32_t arg4, int64_t arg5) override;
	void glVertexBindingDivisor(int32_t arg0, int32_t arg1) override;
	void glViewport(int32_t arg0, int32_t arg1, int32_t arg2, int32_t arg3) override;
	void glViewportArrayvNV(int32_t arg0, int32_t arg1, FloatBuffer* arg2) override;
	void glViewportArrayvNV(int32_t arg0, int32_t arg1, floatArray* arg2, int32_t arg3) override;
	void glViewportIndexedfNV(int32_t arg0, float arg1, float arg2, float arg3, float arg4) override;
	void glViewportIndexedfvNV(int32_t arg0, FloatBuffer* arg1) override;
	void glViewportIndexedfvNV(int32_t arg0, floatArray* arg1, int32_t arg2) override;
	void glWaitSync(int64_t arg0, int32_t arg1, int64_t arg2) override;
	bool hasBasicFBOSupport() override;
	bool hasFullFBOSupport() override;
	bool hasGLSL() override;
	bool isExtensionAvailable(String* arg0) override;
	bool isFunctionAvailable(String* arg0) override;
	bool isGL() override;
	bool isGL2() override;
	bool isGL2ES1() override;
	bool isGL2ES2() override;
	bool isGL2ES3() override;
	bool isGL2GL3() override;
	bool isGL3() override;
	bool isGL3ES3() override;
	bool isGL3bc() override;
	bool isGL3core() override;
	bool isGL4() override;
	bool isGL4ES3() override;
	bool isGL4bc() override;
	bool isGL4core() override;
	bool isGLES() override;
	bool isGLES1() override;
	bool isGLES2() override;
	bool isGLES2Compatible() override;
	bool isGLES3() override;
	bool isGLES31Compatible() override;
	bool isGLES32Compatible() override;
	bool isGLES3Compatible() override;
	bool isGLcore() override;
	bool isNPOTTextureAvailable() override;
	bool isPBOPackBound() override;
	bool isPBOUnpackBound() override;
	bool isTextureFormatBGRA8888Available() override;
	bool isVBOArrayBound() override;
	bool isVBOElementArrayBound() override;
	GLBufferStorage* mapBuffer(int32_t arg0, int32_t arg1) override;
	GLBufferStorage* mapBufferRange(int32_t arg0, int64_t arg1, int64_t arg2, int32_t arg3) override;
	void setSwapInterval(int32_t arg0) override;
	String* toString() override;
	/*void writeGLError(int32_t arg0, String* arg1, ObjectArray* arg2); (private) */

	// Generated
	DebugGLES3(GLES3* arg0);
protected:
	DebugGLES3(const ::default_init_tag&);


public:
	static ::java::lang::Class *class_();

private:
	virtual ::java::lang::Class* getClass0();
};
