# update engine
function: updateEngine()
	#console.printLine("-----------------------------")
	#console.printLine("updateEngine(): " + logic.getId())
	#console.printLine("-----------------------------")
	#console.printLine()

	# camera
	engine.camera.setLookAt($$.transform->getTranslation())
	engine.camera.setLookFrom($$.transform->getTranslation() + Vector3(0.0, 10.0, 10.0))
	engine.camera.setUpVector(engine.camera.computeUpVector(engine.camera.getLookFrom(), engine.camera.getLookAt())) 

	# update object from physics
	engine.entity.setTransform(logic.getId(), $$.transform)

	# if no path finding
	if ($$.pathFinding.pathIdx == -1)
		# update velocity based on arrow keys
		$$.velocity = Vector3(0.0, 0.0, 0.0)
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_LEFT()) == true)
			$$.velocity = $$.velocity + Vector3(-1.0, 0.0, 0.0)
		end
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_RIGHT()) == true)
			$$.velocity = $$.velocity + Vector3(1.0, 0.0, 0.0)
		end
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_UP()) == true)
			$$.velocity = $$.velocity + Vector3(0.0, 0.0, -1.0)
		end
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_DOWN()) == true)
			$$.velocity = $$.velocity + Vector3(0.0, 0.0, 1.0)
		end
	else
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_LEFT()) == true)
			$$.pathFinding.pathIdx = -1
		end
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_RIGHT()) == true)
			$$.pathFinding.pathIdx = -1
		end
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_UP()) == true)
			$$.pathFinding.pathIdx = -1
		end
		if (input.keyboard.isKeyDown(input.keyboard.KEYCODE_DOWN()) == true)
			$$.pathFinding.pathIdx = -1
		end
	end

	# switch animation
	$currentAnimation = engine.entity.getAnimation(logic.getId())
	if ($$.velocity->computeLengthSquared() > $$.math::EPSILON)
		# update velocity
		$$.velocity = $$.velocity->normalize() * $$.speed
		#
		if ($currentAnimation != "walk") 
			engine.entity.setAnimation(logic.getId(), "walk")
		end
	else
		if ($currentAnimation != "idle") 
			engine.entity.setAnimation(logic.getId(), "idle")
		end
	end
	
	# mouse
	if (input.mouse.hasMoved() == true)
		$$.mouseX = input.mouse.getXUnscaled()
		$$.mouseY = input.mouse.getYUnscaled()
	end
	if (input.mouse.isButtonDown(input.mouse.BUTTON_LEFT()) == true)
		if ($$.mouseX != -1 && $$.mouseY != -1)
			if ($$.entityId != "")
				engine.entity.setEffectColorAdd($$.entityId, Vector4(0.0, 0.0, 0.0, 0.0))
			end
			$$.entityId = engine.getEntityIdByMousePosition($$.mouseX, $$.mouseY)
			if ($$.entityId != "")
				engine.entity.setEffectColorAdd($$.entityId, Vector4(1.0, 0.0, 0.0, 0.0))
			end
			$clickWorldPosition = engine.computeWorldCoordinateByMousePosition($$.mouseX, $$.mouseY)
			$$.pathFinding.enabled = true
			$$.pathFinding.start = $$.transform->getTranslation()
			$$.pathFinding.end = $clickWorldPosition
			console.printLine("Clicked@worldposition: ", $clickWorldPosition)
		end
	end
end

# update logic
function: updateLogic()
	#console.printLine("-----------------------------")
	#console.printLine("updateLogic(): " + logic.getId())
	#console.printLine("-----------------------------")
	#console.printLine()
	# path finding
	if ($$.pathFinding.pathIdx >= 0)
		$$.velocity = getPathFindingMovementDirection() * $$.speed 
		if ($$.velocity->computeLengthSquared() < math.square($$.math::EPSILON))
			++$$.pathFinding.pathIdx
			if ($$.pathFinding.pathIdx >= $$.pathFinding.path->getSize())
				$$.pathFinding.pathIdx = -1
			end
			$$.velocity = getPathFindingMovementDirection() * $$.speed 
		end
	end
	# pass velocity to physics object
	world.body.setLinearVelocity(logic.getId(), $$.velocity)
	# read back transform from physics object
	$$.transform->setTranslation(world.body.getTransform(logic.getId())->getTranslation())
	# apply rotation angle and interpolate rotation
	if (math.abs(math.absmod($$.rotation, 360.0) - math.absmod($$.rotationLast, 360.0)) > $$.math::EPSILON)
		$$.rotationTimePassed = 0.0
	end
	$currentAngle = $$.transform->getRotationAngle(1)
	$targetAngle = $$.rotation
	$interpolatedAngle = 0.0
	if (Transform::interpolateRotation($currentAngle, $targetAngle, $$.rotationTimePassed, 360.0, $interpolatedAngle) == true)
		$$.rotationTimePassed = 0.0
	else
		$$.rotationTimePassed = $$.rotationTimePassed + engine.timing.getDeltaTimeSeconds()
	end
	$$.transform->setRotationAngle(1, $interpolatedAngle)
	# path finding
	if ($$.pathFinding.enabled == true)
		$$.pathFinding.path = []
		$state = pathfinding.findPath(logic.getId(), $$.pathFinding.start, $$.pathFinding.end, $$.pathFinding.path)
		if ($state == pathfinding.STATE_PATHFINDING_SUCCESS())
			$$.pathFinding.enabled = false
			console.printLine("Pathfinding: Success: ", $$.pathFinding.path)
			$$.pathFinding.pathIdx = 0
		elseif ($state == pathfinding.STATE_PATHFINDING_FAILED())
			$$.pathFinding.enabled = false
			console.printLine("Pathfinding: Fail: ")
		end
	end
	#
	$$.rotationLast = $$.rotation
	# rotation
	if (math.abs($$.velocity->getX() - 0.0) > $$.math::EPSILON)
		if ($$.velocity->getX() > $$.math::EPSILON)
			$$.rotation = 90.0
		else
			$$.rotation = 270.0
		end
	elseif (math.abs($$.velocity->getZ() - 0.0) > $$.math::EPSILON)
		if ($$.velocity->getZ() > $$.math::EPSILON)
			$$.rotation = 0.0
		else
			$$.rotation = 180.0
		end
	end
end

# logic added
function: onLogicAdded()
	#console.printLine("-----------------------------")
	#console.printLine("onLogicAdded(): " + logic.getId())
	#console.printLine("-----------------------------")
	#console.printLine()
	#
	$$.transform = engine.entity.getTransform(logic.getId())
	$$.velocity = Vector3(0.0, 0.0, 0.0)
	$$.speed = 4.0
	$$.rotation = 180.0
	$$.rotationLast = 180.0
	$$.mouseX = -1
	$$.mouseY = -1
	$$.entityId = ""
	$$.rotationTimePassed = 0.0
	$$.pathFinding = {
		enabled: false,
		start: Vector3(0.0, 0.0, 0.0),
		end: Vector3(0.0, 0.0, 0.0),
		path: [],
		pathIdx: -1
	}
	console.printLine($$.pathFinding)
	
end

# logics processed
function: onLogicsProcessed()
	#console.printLine("-----------------------------")
	#console.printLine("onLogicsProcessed(): " + logic.getId())
	#console.printLine("-----------------------------")
	#console.printLine()
end

on: initialize
	console.printLine("-----------------------------")
	console.printLine("on: initialize: " + logic.getId())
	console.printLine("-----------------------------")
	console.printLine()
end

# if no condition is met, nothing will be executed, lol :D
on: nothing
	#console.printLine("-----------------------------")
	#console.printLine("on: nothing: " + logic.getId())
	#console.printLine("-----------------------------")
	#console.printLine()
end

# an error has occurred
on: error
	console.printLine("An error occurred")
	script.stop()
end

function: getPathFindingMovementDirection()
	if ($$.pathFinding.pathIdx == -1 || $$.pathFinding.pathIdx >= $$.pathFinding.path->getSize())
		return(Vector3(0.0, 0.0, 0.0))
	end
	$xDirection = 0.0
	$zDirection = 0.0
	$translation =  $$.transform->getTranslation()
	if (math.abs($translation->getX() - $$.pathFinding.path[$$.pathFinding.pathIdx]->getX()) < 0.1)
		$xDirection = 0.0
	elseif ($translation->getX() < $$.pathFinding.path[$$.pathFinding.pathIdx]->getX())
		$xDirection = 1.0
	elseif ($translation->getX() > $$.pathFinding.path[$$.pathFinding.pathIdx]->getX())
		$xDirection = -1.0
	end
	if (math.abs($xDirection - 0.0) > $$.math::EPSILON)
		return(Vector3($xDirection, 0.0, $zDirection))
	end
	if (math.abs($translation->getZ() - $$.pathFinding.path[$$.pathFinding.pathIdx]->getZ()) < 0.1)
		$zDirection = 0.0
	elseif ($translation->getZ() < $$.pathFinding.path[$$.pathFinding.pathIdx]->getZ())
		$zDirection = 1.0
	elseif ($translation->getZ() > $$.pathFinding.path[$$.pathFinding.pathIdx]->getZ())
		$zDirection = -1.0
	end
	return(Vector3($xDirection, 0.0, $zDirection))
end
