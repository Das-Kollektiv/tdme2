# initialize
on: initialize
	console.log("------------")
	console.log("Initialize")
	console.log("------------")
	console.log()
end
# if no condition is met, nothing will be executed, lol :D
on: nothing
	console.log("---------")
	console.log("Nothing")
	console.log("----------")
	console.log()
	console.log("-----------------------")
	console.log("Check bool operations")
	console.log("-----------------------")
	console.log("MiniScript will do the job: and(or(equals(MiniScript will do the job, MiniScript will not do the job), equals(it will, it will)), true): ", and(or(equals(MiniScript will do the job, MiniScript will not do the job), equals(it will, it will)), true))
	console.log("-----------------------")
	console.log("Check int computation")
	console.log("-----------------------")
	console.log("sub(add(1, 2, 3), 1)): ", sub(add(1, 2, 3), 1)))
	console.log("div(20, 2): ", div(20, 2))
	console.log("mul(11, 10): ", mul(11, 10))
	console.log("greater(2, 1): ", greater(2, 1))
	console.log("lesser(2, 1): ", lesser(2, 1))
	console.log("-------------------------")
	console.log("Check float computation")
	console.log("-------------------------")
	console.log("sub(add(1.1, 2.2, 3.3), 1.2)): ", sub(add(1.1, 2.2, 3.3), 1.2)))
	console.log("div(20, 1.5): ", div(20, 1.5))
	console.log("mul(11.5, 10.5): ", mul(11.5, 10.5))
	console.log("greater(2.2, 1.3): ", greater(2.2, 1.3))
	console.log("lesser(2.5, 1.2): ", lesser(2.5, 1.2))
	console.log("-------------------------")
	console.log("Check vector3 computation")
	console.log("-------------------------")
	console.log("sub(add(vec3(1.1, 2.2, 3.3)), vec3(1.2, 1.0, 1.0))): ", sub(add(vec3(1.1, 2.2, 3.3)), vec3(1.2, 1.0, 1.0))))
	console.log("div(vec3(20, 10, 5), vec3(1.5, 2.5, 3.5)): ", div(vec3(20, 10, 5), vec3(1.5, 2.5, 3.5)))
	console.log("mul(vec3(20, 10, 5), vec3(1.5, 2.5, 3.5)): ", mul(vec3(20, 10, 5), vec3(1.5, 2.5, 3.5)))
	console.log("div(vec3(20, 10, 5), 2): ", div(vec3(20, 10, 5), 2))
	console.log("mul(vec3(20, 10, 5), 2): " ,mul(vec3(20, 10, 5), 2))
	console.log("vec3.computeLength(vec3(20, 10, 5)): ", vec3.computeLength(vec3(20, 10, 5)))
	console.log("vec3.computeLengthSquared(vec3(20, 10, 5)): ", vec3.computeLengthSquared(vec3(20, 10, 5)))
	console.log("vec3.computeDotProduct(vec3(0, 0, 1), vec3(0, 0, -1)): ", vec3.computeDotProduct(vec3(0, 0, 1), vec3(0, 0, -1)))
	console.log("vec3.computeCrossProduct(vec3(1, 0, 0), vec3(0, 1, 0)): ", vec3.computeCrossProduct(vec3(1, 0, 0), vec3(0, 1, 0)))
	console.log("vec3.normalize(vec3(1, 2, 3)): ", vec3.normalize(vec3(1, 2, 3)))
	console.log("vec3.computeAngle(vec3(0, 0, 1), vec3(1, 0, 0), vec3(0, 1, 0)): ", vec3.computeAngle(vec3(0, 0, 1), vec3(1, 0, 0), vec3(0, 1, 0)))
	console.log("vec3.getX(vec3(1, 2, 3)): ", vec3.getX(vec3(1, 2, 3)))
	console.log("vec3.getY(vec3(1, 2, 3)): ", vec3.getY(vec3(1, 2, 3)))
	console.log("vec3.getZ(vec3(1, 2, 3)): ", vec3.getZ(vec3(1, 2, 3)))
	console.log("-----------------------------------")
	console.log("Check transformations computation")
	console.log("-----------------------------------")
	$transformations = transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0))
	$transformations = transformations.setRotationAngle($transformations, 0, 90));
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)): ", $transformations)
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getTranslation(): ", transformations.getTranslation($transformations))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).setTranslation(vec3(-1,-2,-3)): ", transformations.setTranslation($transformations, vec3(-1,-2,-3)))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getScale(): ", transformations.getScale($transformations))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).setScale(): ", transformations.setScale($transformations, vec3(-2,-3,-4)))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getRotationAxis(): ", transformations.getRotationAxis($transformations, 0))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getRotationAngle(): ", transformations.getRotationAngle($transformations, 0))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).setRotationAngle(): ", transformations.setRotationAngle($transformations, 0, 90))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).multiply(vec3(0,0,0)): ", transformations.multiply($transformations, vec3(0,0,0)))
	console.log("transformations(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).rotate(vec3(0,0,1)): ", transformations.rotate($transformations, vec3(0,0,1)))
	console.log("------------------------")
	console.log("Check string functions")
	console.log("------------------------")
	console.log(space(0), "1"))
	console.log(space(2), "1.1"))
	console.log(space(2), "1.2"))
	console.log(toUpperCase("xxxyyyzzz"))
	console.log(toLowerCase("XXXYYYZZZ"))
	console.log(concatenate("abc", "def", "ghi"))
	console.log("------------------------")
	console.log("Variable")
	console.log("------------------------")
	$variable = string("1234")
	console.log(getVariable("$variable"))
	console.log("--------------------")
	console.log("Lets check forTime")
	console.log("--------------------")
	$i = int(1)
	forTime(2000)
		console.log($i, ": Hello World")
		script.wait(500)
		$i = add($i, 1)
	end
	console.log("-------------------------")
	console.log("Lets check forCondition")
	console.log("-------------------------")
	$i = int(1)
	forCondition(not(equals($i, 6)))
		console.log($i, ": Hello World")
		script.wait(500)
		$i = add($i, 1)
	end
	console.log("i -> ", $i)
	console.log("---------------------------------------------")
	console.log("Lets check forCondition with if/elseif/else")
	console.log("---------------------------------------------")
	$i = int(1)
	forCondition(lesser($i, 5))
		console.log($i, ":")
		if (equals($i, 0))
			console.log("i -> 0")
		elseif (equals($i, 1))
			console.log("i -> 1")
		elseif (equals($i, 2))
			console.log("i -> 2")
		elseif (equals($i, 3))
			console.log("i -> 3")
		else
			console.log("else: ", $i)
		end
		$i = add($i, 1)
	end
	console.log("--------------------------------------------------")
	console.log("Test if enabled naming condition will be emitted")
	console.log("--------------------------------------------------")
	script.enableNamedCondition("named_condition_1")
	script.wait(2000)
	script.disableNamedCondition("named_condition_1")
	console.log("---------------------------------------")
	console.log("Naming condition has not been emitted")
	console.log("---------------------------------------")
end
# an error has occurred
on: error
	console.log("An error occurred")
	script.wait(1000)
end
# emit test
on: emittest
	console.log("---------------------------------")
	console.log("SCRIPT JUST EMITTED A CONDITION")
	console.log("---------------------------------")
	console.log()
	script.stop()
end
# on-enabled with named conditions
on-enabled: equals(1,1) = named_condition_1
	script.disableNamedCondition("named_condition_1")
	console.log("------------------------------------")
	console.log("named_condition_1 has been emitted")
	console.log("------------------------------------")
	console.log()
	console.log("-----------")
	console.log("Test emit")
	console.log("-----------")
	console.log()
	script.emit(emittest)
end
