# initialize
on: initialize
	console.log("------------")
	console.log("Initialize")
	console.log("------------")
	console.log()
end

# user script function of recursive factorial computation 
function: factorial($value)
	console.log("factorial(): $arguments = " + $arguments + " / $value = " + $value)
	if ($value == 0) 
		return(1)
	end
	return($value * factorial($value - 1))
end 

# user script function to just display some hello world
function: helloWorldFunction()
	console.log("helloWorldFunction(): Hello world")
end

# if no condition is met, nothing will be executed, lol :D
on: nothing
	console.log("---------")
	console.log("Nothing")
	console.log("----------")
	console.log()
	console.log("-----------------------")
	console.log("Check bool operations")
	console.log("-----------------------")
	console.log("MiniScript will do the job: and(or(equals(MiniScript will do the job, MiniScript will not do the job), equals(it will, it will)), true): ", and(or(equals(MiniScript will do the job, MiniScript will not do the job), equals(it will, it will)), true))
	console.log("-----------------------")
	console.log("Check int computation")
	console.log("-----------------------")
	console.log("1 + 2 + 3 - 1: ", 1 + 2 + 3 - 1)
	console.log("20 / 2: ", 20 / 2)
	console.log("11 * 10: ", 11 * 10)
	console.log("2 > 1: ", 2 > 1)
	console.log("2 < 1: ", 2 < 1)
	console.log("-------------------------")
	console.log("Check float computation")
	console.log("-------------------------")
	console.log("(1.1 + 2.2 + 3.3) - 1.2: ", (1.1 + 2.2 + 3.3) - 1.2)
	console.log("20 / 1.5: ", 20 / 1.5)
	console.log("11.5 * 10.5: ", 11.5 * 10.5)
	console.log("2.2 > 1.3: ", 2.2 > 1.3)
	console.log("2.5 < 1.2: ", 2.5 < 1.2)
	console.log("-------------------------")
	console.log("Check vector2 math")
	console.log("-------------------------")
	console.log("vec2.computeLength(vec2(20, 10)): ", vec2.computeLength(vec2(20, 10)))
	console.log("vec2.computeLengthSquared(vec2(20, 10)): ", vec2.computeLengthSquared(vec2(20, 10)))
	console.log("vec2.computeDotProduct(vec2(0, 1), vec2(0, -1)): ", vec2.computeDotProduct(vec2(0, 1), vec2(0, -1)))
	console.log("vec2.normalize(vec2(1, 2)): ", vec2.normalize(vec2(1, 2)))
	console.log("vec2.getX(vec2(1, 2)): ", vec2.getX(vec2(1, 2)))
	console.log("vec2.getY(vec2(1, 2)): ", vec2.getY(vec2(1, 2)))
	console.log("vec2(1.1, 2.2) - vec2(1.2, 1.0): ", vec2(1.1, 2.2) - vec2(1.2, 1.0))
	console.log("vec2(20, 10) / vec2(1.5, 2.5): ", vec2(20, 10) / vec2(1.5, 2.5))
	console.log("vec2(20, 10) * vec2(1.5, 2.5)): ", vec2(20, 10) * vec2(1.5, 2.5))
	console.log("vec2(20, 10) / 2): ", vec2(20, 10) / 2)
	console.log("vec2(20, 10) * 2): ", vec2(20, 10) * 2)
	console.log("-------------------------")
	console.log("Check vector3 math")
	console.log("-------------------------")
	console.log("vec3.computeLength(vec3(20, 10, 5)): ", vec3.computeLength(vec3(20, 10, 5)))
	console.log("vec3.computeLengthSquared(vec3(20, 10, 5)): ", vec3.computeLengthSquared(vec3(20, 10, 5)))
	console.log("vec3.computeDotProduct(vec3(0, 0, 1), vec3(0, 0, -1)): ", vec3.computeDotProduct(vec3(0, 0, 1), vec3(0, 0, -1)))
	console.log("vec3.computeCrossProduct(vec3(1, 0, 0), vec3(0, 1, 0)): ", vec3.computeCrossProduct(vec3(1, 0, 0), vec3(0, 1, 0)))
	console.log("vec3.normalize(vec3(1, 2, 3)): ", vec3.normalize(vec3(1, 2, 3)))
	console.log("vec3.computeAngle(vec3(0, 0, 1), vec3(1, 0, 0), vec3(0, 1, 0)): ", vec3.computeAngle(vec3(0, 0, 1), vec3(1, 0, 0), vec3(0, 1, 0)))
	console.log("vec3.getX(vec3(1, 2, 3)): ", vec3.getX(vec3(1, 2, 3)))
	console.log("vec3.getY(vec3(1, 2, 3)): ", vec3.getY(vec3(1, 2, 3)))
	console.log("vec3.getZ(vec3(1, 2, 3)): ", vec3.getZ(vec3(1, 2, 3)))
	console.log("vec3(1.1, 2.2, 3.3) - vec3(1.2, 1.0, 1.0): ", vec3(1.1, 2.2, 3.3) - vec3(1.2, 1.0, 1.0))
	console.log("vec3(20, 10, 5) / vec3(1.5, 2.5, 3.5): ", vec3(20, 10, 5) / vec3(1.5, 2.5, 3.5))
	console.log("vec3(20, 10, 5) * vec3(1.5, 2.5, 3.5)): ", vec3(20, 10, 5) * vec3(1.5, 2.5, 3.5))
	console.log("vec3(20, 10, 5) / 2): ", vec3(20, 10, 5) / 2)
	console.log("vec3(20, 10, 5) * 2): ", vec3(20, 10, 5) * 2)
	console.log("-------------------------")
	console.log("Check vector4 math")
	console.log("-------------------------")
	console.log("vec4.computeLength(vec4(20, 10, 5, 2.5)): ", vec4.computeLength(vec4(20, 10, 5, 2.5)))
	console.log("vec4.computeLengthSquared(vec3(20, 10, 5)): ", vec4.computeLengthSquared(vec4(20, 10, 5, 2.5)))
	console.log("vec4.computeDotProduct(vec3(0, 0, 1), vec3(0, 0, -1, 1)): ", vec4.computeDotProduct(vec4(0, 0, 1, 1), vec4(0, 0, -1, 1)))
	console.log("vec4.normalize(vec4(1, 2, 3, 4)): ", vec4.normalize(vec4(1, 2, 3, 4)))
	console.log("vec4.getX(vec4(1, 2, 3, 4)): ", vec4.getX(vec4(1, 2, 3, 4)))
	console.log("vec4.getY(vec4(1, 2, 3, 4)): ", vec4.getY(vec4(1, 2, 3, 4)))
	console.log("vec4.getZ(vec4(1, 2, 3, 4)): ", vec4.getZ(vec4(1, 2, 3, 4)))
	console.log("vec4.getW(vec4(1, 2, 3, 4)): ", vec4.getZ(vec4(1, 2, 3, 4)))
	console.log("vec4(1.1, 2.2, 3.3, 1.0) - vec4(1.2, 1.0, 1.0, 1.0): ", vec4(1.1, 2.2, 3.3, 1.0) - vec4(1.2, 1.0, 1.0, 1.0))
	console.log("vec4(20, 10, 5, 1) / vec4(1.5, 2.5, 3.5, 1): ", vec4(20, 10, 5, 1) / vec4(1.5, 2.5, 3.5, 1))
	console.log("vec4(20, 10, 5, 1) * vec4(1.5, 2.5, 3.5, 1)): ", vec4(20, 10, 5, 1) * vec4(1.5, 2.5, 3.5, 1))
	console.log("vec4(20, 10, 5, 1) / 2): ", vec4(20, 10, 5, 1) / 2)
	console.log("vec4(20, 10, 5, 1) * 2): ", vec4(20, 10, 5, 1) * 2)
	console.log("-------------------------")
	console.log("Check quaternion math")
	console.log("-------------------------")
	console.log("quaternion.identity(): ", quaternion.identity())
	console.log("quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0): ", quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0))
	console.log("quaternion.normalize(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0)): ", quaternion.normalize(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0)))
	console.log("quaternion.multiply(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0), quaternion.rotate(vec3(1.0, 0.0, 0.0), 90.0)): ", quaternion.multiply(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0), quaternion.rotate(vec3(1.0, 0.0, 0.0), 90.0)))
	console.log("quaternion.multiply(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0), vec3(0.0, 0.0, 1.0)): ", quaternion.multiply(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0), vec3(0.0, 0.0, 1.0)))
	console.log("quaternion.computeMatrix(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0)): ", quaternion.computeMatrix(quaternion.rotate(vec3(0.0, 1.0, 0.0), 90.0)))
	console.log("-------------------------")
	console.log("Check matrix4x4 math")
	console.log("-------------------------")
	console.log("mat4.identity(): ", mat4.identity())
	console.log("mat4.translate(vec3(1.0, 2.0, 3.0)): ", mat4.translate(vec3(1.0, 2.0, 3.0)))
	console.log("mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0): ", mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0))
	console.log("mat4.scale(vec3(1.0, 2.0, 3.0)): ", mat4.scale(vec3(1.0, 2.0, 3.0)))
	console.log("mat4.scale(3.0): ", mat4.scale(3.0))
	console.log("mat4.invert(mat4.scale(3.0)): ", mat4.invert(mat4.scale(3.0)))
	console.log("mat4.computeEulerAngles(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0)): ", mat4.computeEulerAngles(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0)))
	console.log("mat4.multiply(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0), mat4.rotate(vec3(1.0, 0.0, 0.0), 90.0)): ", mat4.multiply(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0), mat4.rotate(vec3(1.0, 0.0, 0.0), 90.0)))
	console.log("mat4.multiply(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0), vec3(0.0, 0.0, 1.0)): ", mat4.multiply(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0), vec3(0.0, 0.0, 1.0)))
	console.log("mat4.multiply(mat4.multiply(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0), mat4.translate(vec3(1.0, 2.0, 3.0))), vec4(0.0, 0.0, 1.0, 0.0)): ", mat4.multiply(mat4.multiply(mat4.rotate(vec3(0.0, 1.0, 0.0), 90.0), mat4.translate(vec3(1.0, 2.0, 3.0))), vec4(0.0, 0.0, 1.0, 0.0)))
	console.log("-------------------------")
	console.log("Check matrix3x3 math")
	console.log("-------------------------")
	console.log("mat3.identity(): ", mat3.identity())
	console.log("mat3.translate(vec2(1.0, 2.0)): ", mat3.translate(vec2(1.0, 2.0)))
	console.log("mat3.rotate(90.0): ", mat3.rotate(90.0))
	console.log("mat3.rotateAroundTextureCenter(90.0): ", mat3.rotateAroundTextureCenter(90.0))
	console.log("mat3.rotateAroundPoint(vec2(0.5, 0.5), 90.0): ", mat3.rotateAroundPoint(vec2(0.5, 0.4), 90.0))
	console.log("mat3.scale(vec2(1.0, 2.0)): ", mat3.scale(vec2(1.0, 2.0)))
	console.log("mat3.scale(3.0): ", mat3.scale(3.0))
	console.log("mat3.multiply(mat3.rotate(90.0), mat3.translate(vec2(1.0, 2.0))): ", mat3.multiply(mat3.rotate(90.0), mat3.translate(vec2(1.0, 2.0))))
	console.log("mat3.multiply(mat3.rotate(90.0), vec2(1.0, 2.0)): ", mat3.multiply(mat3.rotate(90.0), vec2(1.0, 2.0)))
	console.log("-------------------------")
	console.log("Check additional math")
	console.log("-------------------------")
	console.log("math.PI(): ", math.PI())
	console.log("math.EPSILON(): ", math.EPSILON())
	console.log("math.DEG2RAD(): ", math.DEG2RAD())
	console.log("math.G(): ", math.G())
	console.log("math.acos(0.0): ", math.acos(0.0))
	console.log("math.asin(1.0): ", math.asin(1.0))
	console.log("math.atan(1.0): ", math.atan(1.0))
	console.log("math.atan2(-1.0, -1.0): ", math.atan2(-1.0, -1.0))
	console.log("math.floor(2.87): ", math.floor(2.87))
	console.log("math.ceil(2.87): ", math.ceil(2.87))
	console.log("math.round(2.37): ", math.round(2.37))
	console.log("math.round(2.87): ", math.round(2.87))
	console.log("math.cos(0.0): ", math.cos(0.0))
	console.log("math.sin(0.0): ", math.sin(0.0))
	console.log("math.tan(1.0): ", math.tan(1.0))
	console.log("math.sqrt(9.0): ", math.sqrt(9))
	console.log("math.random(): ", math.random())
	console.log("math.random(): ", math.random())
	console.log("math.random(): ", math.random())
	console.log("math.exp(1.0): ", math.exp(1.0))
	console.log("math.log(2.0): ", math.log(2.0))
	console.log("math.sign(-2): ", math.sign(-2))
	console.log("math.sign(-2.0): ", math.sign(-2.0))
	console.log("math.square(3): ", math.square(3))
	console.log("math.square(3.0): ", math.square(3.0))
	console.log("math.min(4, 9): ", math.min(4, 9))
	console.log("math.min(4.1, 9.3): ", math.min(4.1, 9.3))
	console.log("math.max(4, 9): ", math.max(4, 9))
	console.log("math.max(4.1, 9.3): ", math.max(4.1, 9.3))
	console.log("math.abs(-9): ", math.abs(-9))
	console.log("math.abs(-9.3): ", math.abs(-9.3))
	console.log("math.clamp(-1, 4, 9): ", math.clamp(-1, 4, 9))
	console.log("math.clamp(10.0, 4.1, 9.3): ", math.clamp(10.0, 4.1, 9.3))
	console.log("math.pow(2, 16): ", math.pow(2, 16))
	console.log("math.pow(2.0, 16.0): ", math.pow(2.0, 16.0))
	console.log("math.mod(187, 180): ", math.mod(187, 180))
	console.log("math.mod(-187, 180): ", math.mod(-187, 180))
	console.log("math.absmod(187, 180): ", math.absmod(187, 180))
	console.log("math.absmod(-187, 180): ", math.absmod(-187, 180))
	console.log("-----------------------------------")
	console.log("Check transform")
	console.log("-----------------------------------")
	$transform = transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0))
	$transform = transform.setRotationAngle($transform, 0, 90));
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)): ", $transform)
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getTranslation(): ", transform.getTranslation($transform))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).setTranslation(vec3(-1,-2,-3)): ", transform.setTranslation($transform, vec3(-1,-2,-3)))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getScale(): ", transform.getScale($transform))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).setScale(): ", transform.setScale($transform, vec3(-2,-3,-4)))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getRotationAxis(): ", transform.getRotationAxis($transform, 0))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).getRotationAngle(): ", transform.getRotationAngle($transform, 0))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).setRotationAngle(): ", transform.setRotationAngle($transform, 0, 90))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).multiply(vec3(0,0,0)): ", transform.multiply($transform, vec3(0,0,0)))
	console.log("transform(vec3(1,2,3), vec3(2, 3, 4), vec3(0, 1, 0)).rotate(vec3(0,0,1)): ", transform.rotate($transform, vec3(0,0,1)))
	console.log("------------------------")
	console.log("Check string functions")
	console.log("------------------------")
	console.log(space(0), "1"))
	console.log(space(2), "1.1"))
	console.log(space(2), "1.2"))
	console.log(toUpperCase("xxxyyyzzz"))
	console.log(toLowerCase("XXXYYYZZZ"))
	console.log(concatenate("abc", "def", "ghi"))
	console.log("------------------------")
	console.log("Check string functions (Operators)")
	console.log("abc" + "def" + "ghi")
	console.log("------------------------")
	console.log("------------------------")
	console.log("Variable")
	console.log("------------------------")
	$variable = string("1234")
	console.log(getVariable("$variable"))
	console.log("--------------------")
	console.log("Lets check forTime")
	console.log("--------------------")
	$i = 1
	forTime(2000)
		console.log($i, ": Hello World")
		script.wait(500)
		$i = $i + 1
	end
	console.log("-------------------------")
	console.log("Lets check forCondition")
	console.log("-------------------------")
	$i = 1
	forCondition($i != 6)
		console.log($i, ": Hello World")
		script.wait(500)
		$i = $i + 1
	end
	console.log("i -> ", $i)
	console.log("---------------------------------------------")
	console.log("Lets check forCondition with if/elseif/else")
	console.log("---------------------------------------------")
	$i = 1
	forCondition($i < 5)
		console.log($i, ":")
		if ($i == 0)
			console.log("i -> 0")
		elseif ($i == 1)
			console.log("i -> 1")
		elseif ($i == 2)
			console.log("i -> 2")
		elseif ($i == 3)
			console.log("i -> 3")
		else
			console.log("else: ", $i)
		end
		$i = $i + 1
	end
	$i = 1
	$j = 2
	$k = 3
	if (getVariable("$i") == $j || getVariable("$i") == $k)
		console.log("This should not happen, but look ok in preprocessor processed output")
	end
	console.log("-------------------------------------------------------------------------------------")
	console.log("Test: string concatenation with brackets in string literals: " + $i + "(" + $j + ")")
	console.log("-------------------------------------------------------------------------------------")
	console.log("(4.0 + 2.0) / 2.0 + (20.0 / 10.0 * (2.0 + 5)): ", (4.0 + 2.0) / 2.0 + (20.0 / 10.0 * (2.0 + 5)), " = 17")
	console.log("---------")
	console.log("Arrays")
	console.log("----------")
	$array = array(1,2,3)
	console.log("array initialized with: $array = array(1,2,3)")
	console.log("array now looks like: ", $array)
	array.push($array, 8, 9, 10, 99, 10)
	console.log("array pushed values with: array.push($array, 8, 9, 10, 99, 10)")
	console.log("array now looks like: ", $array)
	$array[] = 123
	$array[] = 1234
	$array[] = 12345
	$array[] = array(1,2,3)
	console.log("array values added with [] operator: 123, 1234, 12345, array(1,2,3)")
	console.log("array now looks like: ", $array)
	console.log("array values added with [] operator to push to array of array: 50, 60")
	$array[11][] = 50
	$array[11][] = 60
	$array[11][array.length($array[11]) - 1] = 61
	console.log("array length: ", array.length($array))
	console.log("array iteration with array.get(): ")
	$i = 0
	forCondition($i < array.length($array))
		console.log($i + ": " + array.get($array, $i))
		$i = $i + 1
	end 
	console.log("array iteration with [] operator: ")
	$i = 0
	forCondition($i < array.length($array))
		console.log($i + ": " + $array[$i])
		$i = $i + 1
	end
	console.log("array iteration with [] opertator and some index math: ")
	$i = 0
	forCondition($i < array.length($array) / 2)
		console.log($i + "-a: " + $array[$i * 2 + 0])
		console.log($i + "-b: " + $array[$i * 2 + 1])
		$i = $i + 1
	end
	console.log("array removal of 123, 1234, 12345 using array.removeOf")
	array.removeOf($array, 123)
	array.removeOf($array, 1234)
	array.removeOf($array, 12345)
	console.log("array now looks like: ", $array)
	console.log("array indexOf 10: ", array.indexOf($array, 10))
	console.log("array indexOf 10 beginning to search from 6: ", array.indexOf($array, 10, 6))
	console.log("---------")
	console.log("Maps")
	console.log("----------")
	$map = map()
	console.log("map initialized with: $map = map()")
	console.log("map now looks like: ", $map)
	console.log("put some key value pairs into map: $map = map.set()")
	map.set($map, "test1", 123)
	map.set($map, "test2", 456)
	map.set($map, "test3", 789)
	map.set($map, "test4", array(1,2,3))
	map.set($map, "test5", "Yaaaa")
	console.log("map now looks like: ", $map)
	console.log("remove test2 via map.remove: ")
	map.remove($map, "test2")
	console.log("map now looks like: ", $map)
	map.set($map, "test2", 456)
	console.log("readding test2: ")
	console.log("map does have test2 key using map.has(): ", map.has($map, "test2"))
	console.log("map does have test8 key using map.has(): ", map.has($map, "test8"))
	console.log("map value for test1 key using map.get(): ", map.get($map, "test1"))
	console.log("map value for test2 key using map.get(): ", map.get($map, "test2"))
	console.log("map value for test3 key using map.get(): ", map.get($map, "test3"))
	console.log("map value for test4 key using map.get(): ", map.get($map, "test4"))
	console.log("map value for test5 key using map.get(): ", map.get($map, "test5"))
	console.log("map value for test1 using map dot operator: ", $map.test1)
	console.log("map value for test2 using map dot operator: ", $map.test2)
	console.log("map value for test3 using map dot operator: ", $map.test3)
	console.log("map value for test4 using map dot operator: ", $map.test4)
	console.log("map value for test5 using map dot operator: ", $map.test5)
	console.log("adding map values using map dot operator: ")
	$map.test6 = 666
	$map.test7 = 770
	$map.test8 = 890
	console.log("map keys: ", map.getKeys($map))
	console.log("map values: ", map.getValues($map))
	console.log("iterating keys and values using map.getKeys(): ")
	$mapKeys = map.getKeys($map)
	$i = 0
	forCondition($i < array.length($mapKeys))
		console.log($mapKeys[$i] + " = " + map.get($map, $mapKeys[$i]))
		$i = $i + 1
	end
	console.log("-----------")
	console.log("Functions")
	console.log("-----------")
	helloWorldFunction()
	console.log("factorial(5) = " + factorial(5))
	console.log("--------------------------------------------------")
	console.log("Test if enabled naming condition will be emitted")
	console.log("--------------------------------------------------")
	script.enableNamedCondition("named_condition_1")
	script.wait(2000)
	script.disableNamedCondition("named_condition_1")
	console.log("---------------------------------------")
	console.log("Naming condition has not been emitted")
	console.log("---------------------------------------")
	script.stop()
end
# an error has occurred
on: error
	console.log("An error occurred")
	script.wait(1000)
end
# emit test
on: emittest
	console.log("---------------------------------")
	console.log("SCRIPT JUST EMITTED A CONDITION")
	console.log("---------------------------------")
	console.log()
	console.log("----------")
	console.log("Benchmark ")
	console.log("----------")
	$startTime = time.getCurrentMillis()
	$i = 0
	$j = 0
	$k = 0
	forCondition($i < 500000)
		$a = 123 + 456 * (25 / 12) + (7.5 * 12.25) - 8
		if ($j == 0)
			$k = $k + 1
		end
		$i = $i + 1
		$j = $j + 1
		if ($j == 2)
			$j = 0
		end
	end
	$endTime = time.getCurrentMillis()
	console.log("Finished. Time: " + ($endTime - $startTime))
	script.stop()
end
# on-enabled with named conditions
on-enabled: true == true := named_condition_1
	script.disableNamedCondition("named_condition_1")
	console.log("------------------------------------")
	console.log("named_condition_1 has been emitted")
	console.log("------------------------------------")
	console.log()
	console.log("-----------")
	console.log("Test emit")
	console.log("-----------")
	console.log()
	script.emit(emittest)
end
