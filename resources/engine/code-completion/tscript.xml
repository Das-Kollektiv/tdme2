<?xml version="1.0"?>
<code-completion>
	<keyword name="getVariable" func="yes">
		<overload return-value="Mixed" descr="Get Variable">
			<parameter name="String $variable" />
		</overload>
	</keyword>
	<keyword name="setVariable" func="yes">
		<overload return-value="Mixed" descr="Set Variable">
			<parameter name="String $variable" />
			<parameter name="Mixed $value" />
		</overload>
	</keyword>
	<keyword name="unsetVariable" func="yes">
		<overload return-value="Void" descr="Unset Variable">
			<parameter name="String $variable" />
		</overload>
	</keyword>
	<keyword name="add" func="yes">
		<overload return-value="Mixed" descr="Add">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="and" func="yes">
		<overload return-value="Boolean" descr="Logical And">
			<parameter name="Boolean $a" />
			<parameter name="Boolean $b" />
		</overload>
	</keyword>
	<keyword name="array" func="yes">
		<overload return-value="Array" descr="Create Array">
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="array.get" func="yes">
		<overload return-value="Mixed" descr="Get Array Entry">
			<parameter name="Array $array" />
			<parameter name="Integer $index" />
		</overload>
	</keyword>
	<keyword name="array.set" func="yes">
		<overload return-value="Void" descr="Set Array Entry">
			<parameter name="Array =$array" />
			<parameter name="Integer $index" />
			<parameter name="Mixed $value" />
		</overload>
	</keyword>
	<keyword name="array.indexOf" func="yes">
		<overload return-value="Integer" descr="Get Array Index by Value">
			<parameter name="Array $array" />
			<parameter name="String $value" />
			<parameter name="[Integer $beginIndex]" />
		</overload>
	</keyword>
	<keyword name="array.length" func="yes">
		<overload return-value="Integer" descr="Get Array Length">
			<parameter name="Array $array" />
		</overload>
	</keyword>
	<keyword name="array.push" func="yes">
		<overload return-value="Void" descr="Add to Array">
			<parameter name="Array =$array" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="array.remove" func="yes">
		<overload return-value="Void" descr="Remove Array by Index">
			<parameter name="Array =$array" />
			<parameter name="Integer $index" />
		</overload>
	</keyword>
	<keyword name="array.removeOf" func="yes">
		<overload return-value="Void" descr="Remove Array Entry by Value">
			<parameter name="Array =$array" />
			<parameter name="String $value" />
			<parameter name="[Integer $beginIndex]" />
		</overload>
	</keyword>
	<keyword name="array.reverse" func="yes">
		<overload return-value="Void" descr="Reverse Array">
			<parameter name="Array =$array" />
		</overload>
	</keyword>
	<keyword name="array.sort" func="yes">
		<overload return-value="Void" descr="Sort Array">
			<parameter name="Array =$array" />
			<parameter name="String $function" />
		</overload>
	</keyword>
	<keyword name="bitwiseAnd" func="yes">
		<overload return-value="Integer" descr="Bitwise And">
			<parameter name="Integer $a" />
			<parameter name="Integer $b" />
		</overload>
	</keyword>
	<keyword name="bitwiseNot" func="yes">
		<overload return-value="Integer" descr="Bitwise Not">
			<parameter name="Integer $value" />
		</overload>
	</keyword>
	<keyword name="bitwiseOr" func="yes">
		<overload return-value="Integer" descr="Bitwise Or">
			<parameter name="Integer $a" />
			<parameter name="Integer $b" />
		</overload>
	</keyword>
	<keyword name="bitwiseXor" func="yes">
		<overload return-value="Integer" descr="Bitwise Xor">
			<parameter name="Integer $a" />
			<parameter name="Integer $b" />
		</overload>
	</keyword>
	<keyword name="bool" func="yes">
		<overload return-value="Boolean" descr="Create Bool">
			<parameter name="Boolean $bool" />
		</overload>
	</keyword>
	<keyword name="console.log" func="yes">
		<overload return-value="Void" descr="Print to Console">
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="div" func="yes">
		<overload return-value="Mixed" descr="Divide">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="else" func="yes">
		<overload return-value="Void" descr="Else">
		</overload>
	</keyword>
	<keyword name="elseif" func="yes">
		<overload return-value="Void" descr="Else If">
			<parameter name="Boolean $condition" />
		</overload>
	</keyword>
	<keyword name="end" func="yes">
		<overload return-value="Void" descr="End">
		</overload>
	</keyword>
	<keyword name="equals" func="yes">
		<overload return-value="Boolean" descr="Equals">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="float" func="yes">
		<overload return-value="Float" descr="Create Float">
			<parameter name="Float $float" />
		</overload>
	</keyword>
	<keyword name="forCondition" func="yes">
		<overload return-value="Void" descr="For Condition">
			<parameter name="Boolean $condition" />
		</overload>
	</keyword>
	<keyword name="forTime" func="yes">
		<overload return-value="Void" descr="For Time">
			<parameter name="Integer $time" />
		</overload>
	</keyword>
	<keyword name="greater" func="yes">
		<overload return-value="Boolean" descr="Greater">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="greaterEquals" func="yes">
		<overload return-value="Boolean" descr="Greater Equals">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="if" func="yes">
		<overload return-value="Void" descr="If">
			<parameter name="Boolean $condition" />
		</overload>
	</keyword>
	<keyword name="int" func="yes">
		<overload return-value="Integer" descr="Create Integer">
			<parameter name="Integer $int" />
		</overload>
	</keyword>
	<keyword name="json.deserialize" func="yes">
		<overload return-value="Mixed" descr="Deserialize JSON">
			<parameter name="String $json" />
		</overload>
	</keyword>
	<keyword name="json.serialize" func="yes">
		<overload return-value="String" descr="Serialize JSON">
			<parameter name="Mixed $value" />
		</overload>
	</keyword>
	<keyword name="lesser" func="yes">
		<overload return-value="Boolean" descr="Lesser">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="lesserEquals" func="yes">
		<overload return-value="Boolean" descr="Lesser Equals">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="map" func="yes">
		<overload return-value="Map" descr="Create Map">
		</overload>
	</keyword>
	<keyword name="map.has" func="yes">
		<overload return-value="Boolean" descr="Has Entry by Key">
			<parameter name="Map $map" />
			<parameter name="String $key" />
		</overload>
	</keyword>
	<keyword name="map.get" func="yes">
		<overload return-value="Mixed" descr="Get Map Value by Key">
			<parameter name="Map $map" />
			<parameter name="String $key" />
		</overload>
	</keyword>
	<keyword name="map.set" func="yes">
		<overload return-value="Void" descr="Set Map Entry">
			<parameter name="Map =$map" />
			<parameter name="String $key" />
			<parameter name="Mixed $value" />
		</overload>
	</keyword>
	<keyword name="map.getKeys" func="yes">
		<overload return-value="Array" descr="Get Map Keys">
			<parameter name="Map $map" />
		</overload>
	</keyword>
	<keyword name="map.getValues" func="yes">
		<overload return-value="Array" descr="Get Map Values">
			<parameter name="Map $map" />
		</overload>
	</keyword>
	<keyword name="map.remove" func="yes">
		<overload return-value="Void" descr="Remove Map Entry">
			<parameter name="Map =$map" />
			<parameter name="String $key" />
		</overload>
	</keyword>
	<keyword name="mat3.identity" func="yes">
		<overload return-value="Matrix3x3" descr="Create Identity 3x3 Matrix">
		</overload>
	</keyword>
	<keyword name="mat3.multiply" func="yes">
		<overload return-value="Mixed" descr="Multiply 3x3 Matrix with 3x3 Matrix or Vector2">
			<parameter name="Matrix3x3 $mat3" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="mat3.rotate" func="yes">
		<overload return-value="Matrix3x3" descr="Create Rotation 3x3 Matrix">
			<parameter name="Float $angle" />
		</overload>
	</keyword>
	<keyword name="mat3.rotateAroundPoint" func="yes">
		<overload return-value="Matrix3x3" descr="Create 3x3 Matrix which rotates around Point">
			<parameter name="Vector2 $point" />
			<parameter name="Float $angle" />
		</overload>
	</keyword>
	<keyword name="mat3.rotateAroundTextureCenter" func="yes">
		<overload return-value="Matrix3x3" descr="Create 3x3 Matrix which rotates around Texture Center">
			<parameter name="Float $angle" />
		</overload>
	</keyword>
	<keyword name="mat3.scale" func="yes">
		<overload return-value="Matrix3x3" descr="Create Scale 3x3 Matrix">
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="mat3.translate" func="yes">
		<overload return-value="Matrix3x3" descr="Create Translation 3x3 Matrix">
			<parameter name="Vector2 $translation" />
		</overload>
	</keyword>
	<keyword name="mat4.computeEulerAngles" func="yes">
		<overload return-value="Vector3" descr="Compute Euler Angles from 4x4 Matrix">
			<parameter name="Matrix4x4 $mat4" />
		</overload>
	</keyword>
	<keyword name="mat4.identity" func="yes">
		<overload return-value="Matrix4x4" descr="Create Identity 4x4 Matrix">
		</overload>
	</keyword>
	<keyword name="mat4.invert" func="yes">
		<overload return-value="Matrix4x4" descr="Create 4x4 Matrix Inverse">
			<parameter name="Matrix4x4 $mat4" />
		</overload>
	</keyword>
	<keyword name="mat4.multiply" func="yes">
		<overload return-value="Mixed" descr="Multiply 4x4 Matrix with 4x4 Matrix or Vector3 or Vector4">
			<parameter name="Matrix4x4 $mat4" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="mat4.rotate" func="yes">
		<overload return-value="Matrix4x4" descr="Create Rotation 4x4 Matrix">
			<parameter name="Vector3 $axis" />
			<parameter name="Float $angle" />
		</overload>
	</keyword>
	<keyword name="mat4.scale" func="yes">
		<overload return-value="Matrix4x4" descr="Create Scale 4x4 Matrix">
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="mat4.translate" func="yes">
		<overload return-value="Matrix4x4" descr="Create Translation 4x4 Matrix">
			<parameter name="Vector3 $translation" />
		</overload>
	</keyword>
	<keyword name="math.DEG2RAD" func="yes">
		<overload return-value="Float" descr="Degree to Radian Factor">
		</overload>
	</keyword>
	<keyword name="math.EPSILON" func="yes">
		<overload return-value="Float" descr="Epsilon">
		</overload>
	</keyword>
	<keyword name="math.G" func="yes">
		<overload return-value="Float" descr="G">
		</overload>
	</keyword>
	<keyword name="math.PI" func="yes">
		<overload return-value="Float" descr="PI">
		</overload>
	</keyword>
	<keyword name="math.abs" func="yes">
		<overload return-value="Number" descr="Return Number as Positive Number">
			<parameter name="Number $value" />
		</overload>
	</keyword>
	<keyword name="math.absmod" func="yes">
		<overload return-value="Number" descr="Return Number to be Positive within given Range">
			<parameter name="Number $value" />
			<parameter name="Number $range" />
		</overload>
	</keyword>
	<keyword name="math.acos" func="yes">
		<overload return-value="Float" descr="Compute acos">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.asin" func="yes">
		<overload return-value="Float" descr="Compute asin">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.atan" func="yes">
		<overload return-value="Float" descr="Compute atan">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.atan2" func="yes">
		<overload return-value="Float" descr="Compute atan2">
			<parameter name="Float $y" />
			<parameter name="Float $x" />
		</overload>
	</keyword>
	<keyword name="math.ceil" func="yes">
		<overload return-value="Float" descr="Round Float up to next higher Integer">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.clamp" func="yes">
		<overload return-value="Number" descr="Return Number clamped to be in given Range">
			<parameter name="Number $value" />
			<parameter name="Number $min" />
			<parameter name="Number $max" />
		</overload>
	</keyword>
	<keyword name="math.cos" func="yes">
		<overload return-value="Float" descr="Compute acos">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.exp" func="yes">
		<overload return-value="Float" descr="Compute exp">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.floor" func="yes">
		<overload return-value="Float" descr="Round Float down to next lower Integer">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.log" func="yes">
		<overload return-value="Float" descr="Compute log">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.max" func="yes">
		<overload return-value="Number" descr="Return maximum Number of given Values">
			<parameter name="Number $a" />
			<parameter name="Number $b" />
		</overload>
	</keyword>
	<keyword name="math.min" func="yes">
		<overload return-value="Number" descr="Return minimum Number of given Values">
			<parameter name="Number $a" />
			<parameter name="Number $b" />
		</overload>
	</keyword>
	<keyword name="math.mod" func="yes">
		<overload return-value="Number" descr="Compute Modulo/Remainder">
			<parameter name="Number $value" />
			<parameter name="Number $range" />
		</overload>
	</keyword>
	<keyword name="math.pow" func="yes">
		<overload return-value="Number" descr="Compute pow">
			<parameter name="Number $a" />
			<parameter name="Number $b" />
		</overload>
	</keyword>
	<keyword name="math.random" func="yes">
		<overload return-value="Float" descr="Create a random Number between 0.0 and 1.0">
		</overload>
	</keyword>
	<keyword name="math.round" func="yes">
		<overload return-value="Float" descr="Round Float Up or Down to Integer">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.sign" func="yes">
		<overload return-value="Number" descr="Return Sign of given Number">
			<parameter name="Number $value" />
		</overload>
	</keyword>
	<keyword name="math.sin" func="yes">
		<overload return-value="Float" descr="Compute sin">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.sqrt" func="yes">
		<overload return-value="Float" descr="Compute Square Root">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="math.square" func="yes">
		<overload return-value="Number" descr="Compute Square Product">
			<parameter name="Number $value" />
		</overload>
	</keyword>
	<keyword name="math.tan" func="yes">
		<overload return-value="Float" descr="Compute tan">
			<parameter name="Float $value" />
		</overload>
	</keyword>
	<keyword name="mod" func="yes">
		<overload return-value="Number" descr="Compute Modulo">
			<parameter name="Number $value" />
			<parameter name="Number $range" />
		</overload>
	</keyword>
	<keyword name="mul" func="yes">
		<overload return-value="Mixed" descr="Multiply">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="not" func="yes">
		<overload return-value="Boolean" descr="Logical Not">
			<parameter name="Boolean $bool" />
		</overload>
	</keyword>
	<keyword name="notEqual" func="yes">
		<overload return-value="Boolean" descr="Logical Not Equal">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="or" func="yes">
		<overload return-value="Boolean" descr="Logical Or">
			<parameter name="Boolean $a" />
			<parameter name="Boolean $b" />
		</overload>
	</keyword>
	<keyword name="prefixDecrement" func="yes">
		<overload return-value="Integer" descr="Prefix Decrement">
			<parameter name="Integer =$variable" />
		</overload>
	</keyword>
	<keyword name="prefixIncrement" func="yes">
		<overload return-value="Integer" descr="Prefix Increment">
			<parameter name="Integer =$variable" />
		</overload>
	</keyword>
	<keyword name="quaternion.computeEulerAngles" func="yes">
		<overload return-value="Vector3" descr="Compute Euler Angles from Quaternion">
			<parameter name="Quaternion $quaternion" />
		</overload>
	</keyword>
	<keyword name="quaternion.computeMatrix" func="yes">
		<overload return-value="Matrix4x4" descr="Compute 4x4 Rotation Matrix from Quaternion">
			<parameter name="Quaternion $quaternion" />
		</overload>
	</keyword>
	<keyword name="quaternion.identity" func="yes">
		<overload return-value="Quaternion" descr="Create Identity Quaternion">
		</overload>
	</keyword>
	<keyword name="quaternion.invert" func="yes">
		<overload return-value="Quaternion" descr="Create Quaternion Inverse">
			<parameter name="Quaternion $quaternion" />
		</overload>
	</keyword>
	<keyword name="quaternion.multiply" func="yes">
		<overload return-value="Mixed" descr="Multiply Quaternion with Quaternion or Vector3">
			<parameter name="Quaternion $quaternion" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="quaternion.normalize" func="yes">
		<overload return-value="Quaternion" descr="Normalize Quaternion">
			<parameter name="Quaternion $quaternion" />
		</overload>
	</keyword>
	<keyword name="quaternion.rotate" func="yes">
		<overload return-value="Quaternion" descr="Create Rotation Quaternion">
			<parameter name="Vector3 $axis" />
			<parameter name="Float $angle" />
		</overload>
	</keyword>
	<keyword name="return" func="yes">
		<overload return-value="Void" descr="Return from Function with optional Return Value">
			<parameter name="[Mixed $value]" />
		</overload>
	</keyword>
	<keyword name="script.getNamedConditions" func="yes">
		<overload return-value="String" descr="Get Named Conditions">
		</overload>
	</keyword>
	<keyword name="script.getVariables" func="yes">
		<overload return-value="Map" descr="Get Script Variables">
		</overload>
	</keyword>
	<keyword name="script.call" func="yes">
		<overload return-value="Mixed" descr="Call Script Function">
			<parameter name="String $function" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="script.disableNamedCondition" func="yes">
		<overload return-value="Void" descr="Disable a specific Named Condition">
			<parameter name="String $name" />
		</overload>
	</keyword>
	<keyword name="script.emit" func="yes">
		<overload return-value="Void" descr="Emit a Condition">
			<parameter name="String $condition" />
		</overload>
	</keyword>
	<keyword name="script.enableNamedCondition" func="yes">
		<overload return-value="Void" descr="Enable a specific Named Condition">
			<parameter name="String $name" />
		</overload>
	</keyword>
	<keyword name="script.evaluate" func="yes">
		<overload return-value="Mixed" descr="Evaluate a Script Statement">
			<parameter name="String $statement" />
		</overload>
	</keyword>
	<keyword name="script.stop" func="yes">
		<overload return-value="Void" descr="Stop Script">
		</overload>
	</keyword>
	<keyword name="script.wait" func="yes">
		<overload return-value="Void" descr="Wait for given Milliseconds">
			<parameter name="Integer $time" />
		</overload>
	</keyword>
	<keyword name="script.waitForCondition" func="yes">
		<overload return-value="Void" descr="Wait for Condition to happen">
		</overload>
	</keyword>
	<keyword name="set" func="yes">
		<overload return-value="Set" descr="Create Set">
		</overload>
	</keyword>
	<keyword name="set.has" func="yes">
		<overload return-value="Boolean" descr="Has Key in Set">
			<parameter name="Set $set" />
			<parameter name="String $key" />
		</overload>
	</keyword>
	<keyword name="set.getKeys" func="yes">
		<overload return-value="Array" descr="Get Set Keys">
			<parameter name="Set $set" />
		</overload>
	</keyword>
	<keyword name="set.insert" func="yes">
		<overload return-value="Void" descr="Insert Key into Set">
			<parameter name="Set =$set" />
			<parameter name="String $key" />
		</overload>
	</keyword>
	<keyword name="set.remove" func="yes">
		<overload return-value="Void" descr="Remove Key from Set">
			<parameter name="Set =$set" />
			<parameter name="String $key" />
		</overload>
	</keyword>
	<keyword name="string" func="yes">
		<overload return-value="String" descr="Create String">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="string.isEmpty" func="yes">
		<overload return-value="Boolean" descr="Test if String Value is Empty">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="string.isFloat" func="yes">
		<overload return-value="Boolean" descr="Test if String Value is a Float Number">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="string.isInteger" func="yes">
		<overload return-value="Boolean" descr="Test if String Value is a Integer Number">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="string.charAt" func="yes">
		<overload return-value="String" descr="Return Character of String at given Position">
			<parameter name="String $string" />
			<parameter name="Integer $index" />
		</overload>
	</keyword>
	<keyword name="string.concatenate" func="yes">
		<overload return-value="String" descr="Concatenate Strings">
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="string.endsWith" func="yes">
		<overload return-value="Boolean" descr="Test if String ends with specific String">
			<parameter name="String $string" />
			<parameter name="String $suffix" />
		</overload>
	</keyword>
	<keyword name="string.equalsIgnoreCase" func="yes">
		<overload return-value="Boolean" descr="Test if 2 Strings matches ignoring Case Sensitivity">
			<parameter name="String $string1" />
			<parameter name="String $string2" />
		</overload>
	</keyword>
	<keyword name="string.firstIndexOf" func="yes">
		<overload return-value="Integer" descr="Return First Index of specific String in String">
			<parameter name="String $string" />
			<parameter name="String $what" />
			<parameter name="[Integer $beginIndex]" />
		</overload>
	</keyword>
	<keyword name="string.indexOf" func="yes">
		<overload return-value="Integer" descr="Return Index of specific String in String">
			<parameter name="String $string" />
			<parameter name="String $what" />
			<parameter name="[Integer $beginIndex]" />
		</overload>
	</keyword>
	<keyword name="string.lastIndexOf" func="yes">
		<overload return-value="Integer" descr="Return Last Index of specific String in String">
			<parameter name="String $string" />
			<parameter name="String $what" />
			<parameter name="[Integer $beginIndex]" />
		</overload>
	</keyword>
	<keyword name="string.length" func="yes">
		<overload return-value="Integer" descr="Return String Length">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="string.padLeft" func="yes">
		<overload return-value="String" descr="Pad String Left">
			<parameter name="String $src" />
			<parameter name="String $by" />
			<parameter name="Integer $toSize" />
		</overload>
	</keyword>
	<keyword name="string.padRight" func="yes">
		<overload return-value="String" descr="Pad String Right">
			<parameter name="String $src" />
			<parameter name="String $by" />
			<parameter name="Integer $toSize" />
		</overload>
	</keyword>
	<keyword name="string.regexMatch" func="yes">
		<overload return-value="Boolean" descr="RegEx Match">
			<parameter name="String $string" />
			<parameter name="String $pattern" />
		</overload>
	</keyword>
	<keyword name="string.regexReplace" func="yes">
		<overload return-value="String" descr="RegEx Replace">
			<parameter name="String $string" />
			<parameter name="String $pattern" />
			<parameter name="String $by" />
		</overload>
	</keyword>
	<keyword name="string.replace" func="yes">
		<overload return-value="String" descr="Replace specific String in String with given String">
			<parameter name="String $string" />
			<parameter name="String $what" />
			<parameter name="String $by" />
			<parameter name="[Integer $beginIndex]" />
		</overload>
	</keyword>
	<keyword name="string.space" func="yes">
		<overload return-value="String" descr="Create Spaces as String">
			<parameter name="[Integer $spaces]" />
		</overload>
	</keyword>
	<keyword name="string.startsWith" func="yes">
		<overload return-value="Boolean" descr="Test if given String starts with specific String">
			<parameter name="String $string" />
			<parameter name="String $prefix" />
		</overload>
	</keyword>
	<keyword name="string.substring" func="yes">
		<overload return-value="String" descr="Return Substring of String">
			<parameter name="String $string" />
			<parameter name="Integer $beginIndex" />
			<parameter name="[Integer $endIndex]" />
		</overload>
	</keyword>
	<keyword name="string.toLowerCase" func="yes">
		<overload return-value="String" descr="Compute Lower Case String of String">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="string.toUpperCase" func="yes">
		<overload return-value="String" descr="Compute Upper Case String of String">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="string.tokenize" func="yes">
		<overload return-value="Array" descr="Tokenize String">
			<parameter name="String $string" />
			<parameter name="String $delimiters" />
		</overload>
	</keyword>
	<keyword name="string.trim" func="yes">
		<overload return-value="String" descr="Trim String">
			<parameter name="String $string" />
		</overload>
	</keyword>
	<keyword name="sub" func="yes">
		<overload return-value="Mixed" descr="Subtract">
			<parameter name="Mixed $a" />
			<parameter name="Mixed $b" />
		</overload>
	</keyword>
	<keyword name="time.getAsString" func="yes">
		<overload return-value="String" descr="Get Time as String">
			<parameter name="[String $format]" />
		</overload>
	</keyword>
	<keyword name="time.getCurrentMillis" func="yes">
		<overload return-value="Integer" descr="Get Current Time in Milliseconds">
		</overload>
	</keyword>
	<keyword name="transform" func="yes">
		<overload return-value="Transform" descr="Create Transform">
			<parameter name="[Vector3 $translation]" />
			<parameter name="[Vector3 $scale]" />
			<parameter name="[Float $rotationZ]" />
			<parameter name="[Float $rotationY]" />
			<parameter name="[Float $rotationX]" />
		</overload>
	</keyword>
	<keyword name="transform.AXIS_X" func="yes">
		<overload return-value="Vector3" descr="X Axis as Vector3">
		</overload>
	</keyword>
	<keyword name="transform.AXIS_Y" func="yes">
		<overload return-value="Vector3" descr="Y Axis as Vector3">
		</overload>
	</keyword>
	<keyword name="transform.AXIS_Z" func="yes">
		<overload return-value="Vector3" descr="Z Axis as Vector3">
		</overload>
	</keyword>
	<keyword name="transform.getRotationAngle" func="yes">
		<overload return-value="Float" descr="Get Rotation Angle of specific Rotation of Transform">
			<parameter name="Transform $transform" />
			<parameter name="Integer $idx" />
		</overload>
	</keyword>
	<keyword name="transform.setRotationAngle" func="yes">
		<overload return-value="Void" descr="Set Rotation Angle of specific Rotation of Transform">
			<parameter name="Transform =$transform" />
			<parameter name="Integer $idx" />
			<parameter name="Float $angle" />
		</overload>
	</keyword>
	<keyword name="transform.getRotationAxis" func="yes">
		<overload return-value="Vector3" descr="Set Rotation Axis of specific Rotation of Transform">
			<parameter name="Transform $transform" />
			<parameter name="Integer $idx" />
		</overload>
	</keyword>
	<keyword name="transform.getRotationsQuaternion" func="yes">
		<overload return-value="Quaternion" descr="Compute Transform Rotations Quaternion">
			<parameter name="Transform $transform" />
		</overload>
	</keyword>
	<keyword name="transform.getScale" func="yes">
		<overload return-value="Vector3" descr="Get Transfrom Scale">
			<parameter name="Transform $transform" />
		</overload>
	</keyword>
	<keyword name="transform.setScale" func="yes">
		<overload return-value="Void" descr="Set Transfrom Scale">
			<parameter name="Transform =$transform" />
			<parameter name="Vector3 $scale" />
		</overload>
	</keyword>
	<keyword name="transform.getTransformMatrix" func="yes">
		<overload return-value="Matrix4x4" descr="Get 4x4 Transform Matrix">
			<parameter name="Transform $transform" />
		</overload>
	</keyword>
	<keyword name="transform.getTranslation" func="yes">
		<overload return-value="Vector3" descr="Get Transform Translation">
			<parameter name="Transform $transform" />
		</overload>
	</keyword>
	<keyword name="transform.setTranslation" func="yes">
		<overload return-value="Void" descr="Set Transform Translation">
			<parameter name="Transform =$transform" />
			<parameter name="Vector3 $translation" />
		</overload>
	</keyword>
	<keyword name="transform.applyRotation" func="yes">
		<overload return-value="Void" descr="Apply a Rotation to Transform">
			<parameter name="Transform =$transform" />
			<parameter name="Vector3 $axis" />
			<parameter name="Float $angle" />
		</overload>
	</keyword>
	<keyword name="transform.fromMatrix" func="yes">
		<overload return-value="Transform" descr="Create Transform from 4x4 Matrix">
			<parameter name="Matrix4x4 $transformMatrix" />
		</overload>
	</keyword>
	<keyword name="transform.interpolateRotation" func="yes">
		<overload return-value="Boolean" descr="Interpolate Rotation">
			<parameter name="Float $currentAngle" />
			<parameter name="Float $targetAngle" />
			<parameter name="Float $timePassedSeconds" />
			<parameter name="Float $degreesPerSeconds" />
			<parameter name="Float =$interpolatedAngle" />
		</overload>
	</keyword>
	<keyword name="transform.multiply" func="yes">
		<overload return-value="Vector3" descr="Multiply Transform with Vector3">
			<parameter name="Transform $transform" />
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="transform.rotate" func="yes">
		<overload return-value="Vector3" descr="Rotate Vector3 using Transform">
			<parameter name="Transform $transform" />
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="vec2" func="yes">
		<overload return-value="Vector2" descr="Create Vector2">
			<parameter name="Float $x" />
			<parameter name="Float $y" />
		</overload>
	</keyword>
	<keyword name="vec2.computeDotProduct" func="yes">
		<overload return-value="Float" descr="Compute Vector2 Dot Product">
			<parameter name="Vector2 $a" />
			<parameter name="Vector2 $b" />
		</overload>
	</keyword>
	<keyword name="vec2.computeLength" func="yes">
		<overload return-value="Float" descr="Compute Vector2 Length">
			<parameter name="Vector2 $vec2" />
		</overload>
	</keyword>
	<keyword name="vec2.computeLengthSquared" func="yes">
		<overload return-value="Float" descr="Compute Vector2 Squared Length">
			<parameter name="Vector2 $vec2" />
		</overload>
	</keyword>
	<keyword name="vec2.getX" func="yes">
		<overload return-value="Float" descr="Return Vector2 X Component">
			<parameter name="Vector2 $vec2" />
		</overload>
	</keyword>
	<keyword name="vec2.getY" func="yes">
		<overload return-value="Float" descr="Return Vector2 Y Component">
			<parameter name="Vector2 $vec2" />
		</overload>
	</keyword>
	<keyword name="vec2.normalize" func="yes">
		<overload return-value="Vector2" descr="Normalize Vector2">
			<parameter name="Vector2 $vec2" />
		</overload>
	</keyword>
	<keyword name="vec3" func="yes">
		<overload return-value="Vector3" descr="Create Vector3">
			<parameter name="Float $x" />
			<parameter name="Float $y" />
			<parameter name="Float $z" />
		</overload>
	</keyword>
	<keyword name="vec3.computeAngle" func="yes">
		<overload return-value="Float" descr="Compute Angle between two Vector3">
			<parameter name="Vector3 $a" />
			<parameter name="Vector3 $b" />
			<parameter name="Vector3 $n" />
		</overload>
	</keyword>
	<keyword name="vec3.computeCrossProduct" func="yes">
		<overload return-value="Vector3" descr="Compute Vector3 Cross Product">
			<parameter name="Vector3 $a" />
			<parameter name="Vector3 $b" />
		</overload>
	</keyword>
	<keyword name="vec3.computeDotProduct" func="yes">
		<overload return-value="Float" descr="Compute Vector3 Dot Product">
			<parameter name="Vector3 $a" />
			<parameter name="Vector3 $b" />
		</overload>
	</keyword>
	<keyword name="vec3.computeLength" func="yes">
		<overload return-value="Float" descr="Compute Vector3 Length">
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="vec3.computeLengthSquared" func="yes">
		<overload return-value="Float" descr="Compute Vector3 Squared Length">
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="vec3.getX" func="yes">
		<overload return-value="Float" descr="Return Vector3 X Component">
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="vec3.getY" func="yes">
		<overload return-value="Float" descr="Return Vector3 Y Component">
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="vec3.getZ" func="yes">
		<overload return-value="Float" descr="Return Vector3 Z Component">
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="vec3.normalize" func="yes">
		<overload return-value="Vector3" descr="Normalize Vector3">
			<parameter name="Vector3 $vec3" />
		</overload>
	</keyword>
	<keyword name="vec4" func="yes">
		<overload return-value="Vector4" descr="Create Vector4">
			<parameter name="Float $x" />
			<parameter name="Float $y" />
			<parameter name="Float $z" />
			<parameter name="Float $w" />
		</overload>
	</keyword>
	<keyword name="vec4.computeDotProduct" func="yes">
		<overload return-value="Float" descr="Compute Vector4 Dot Product">
			<parameter name="Vector4 $a" />
			<parameter name="Vector4 $b" />
		</overload>
	</keyword>
	<keyword name="vec4.computeLength" func="yes">
		<overload return-value="Float" descr="Compute Vector4 Length">
			<parameter name="Vector4 $vec4" />
		</overload>
	</keyword>
	<keyword name="vec4.computeLengthSquared" func="yes">
		<overload return-value="Float" descr="Compute Vector4 Squared Length">
			<parameter name="Vector4 $vec4" />
		</overload>
	</keyword>
	<keyword name="vec4.getW" func="yes">
		<overload return-value="Float" descr="Return Vector4 W Component">
			<parameter name="Vector4 $vec4" />
		</overload>
	</keyword>
	<keyword name="vec4.getX" func="yes">
		<overload return-value="Float" descr="Return Vector4 X Component">
			<parameter name="Vector4 $vec4" />
		</overload>
	</keyword>
	<keyword name="vec4.getY" func="yes">
		<overload return-value="Float" descr="Return Vector4 Y Component">
			<parameter name="Vector4 $vec4" />
		</overload>
	</keyword>
	<keyword name="vec4.getZ" func="yes">
		<overload return-value="Float" descr="Return Vector4 Z Component">
			<parameter name="Vector4 $vec4" />
		</overload>
	</keyword>
	<keyword name="vec4.normalize" func="yes">
		<overload return-value="Vector4" descr="Normalize Vector4">
			<parameter name="Vector4 $vec4" />
		</overload>
	</keyword>
	<keyword name="xml.createTag" func="yes">
		<overload return-value="String" descr="Create XML Tag">
			<parameter name="String $name" />
			<parameter name="[Map $attributes]" />
			<parameter name="[String $innerXML]" />
		</overload>
	</keyword>
	<keyword name="engine.getEntityIdByMousePosition" func="yes">
		<overload return-value="String" descr="Get Engine Entity Id by Mouse Position">
			<parameter name="Integer $mouseX" />
			<parameter name="Integer $mouseY" />
		</overload>
	</keyword>
	<keyword name="engine.getHeight" func="yes">
		<overload return-value="Integer" descr="Get Engine Height">
		</overload>
	</keyword>
	<keyword name="engine.computeScreenCoordinateByWorldCoordinate" func="yes">
		<overload return-value="Boolean" descr="Compute Engine Screen Coordinate by World Coordinate">
			<parameter name="Vector3 $worldCoodinate" />
			<parameter name="Vector2 =$screenCoordinate" />
		</overload>
	</keyword>
	<keyword name="engine.getWidth" func="yes">
		<overload return-value="Integer" descr="Get Engine Width">
		</overload>
	</keyword>
	<keyword name="engine.computeWorldCoordinateByMousePosition" func="yes">
		<overload return-value="Vector3" descr="Compute Engine World Coordinate by Mouse Position">
			<parameter name="Integer $mouseX" />
			<parameter name="Integer $mouseY" />
		</overload>
	</keyword>
	<keyword name="engine.camera.getFovX" func="yes">
		<overload return-value="Float" descr="Get Camera horizontal Field Of View">
		</overload>
	</keyword>
	<keyword name="engine.camera.setFovX" func="yes">
		<overload return-value="Void" descr="Set Camera horizontal Field Of View">
			<parameter name="Float $fovX" />
		</overload>
	</keyword>
	<keyword name="engine.camera.getLookAt" func="yes">
		<overload return-value="Vector3" descr="Get Camera Look At">
		</overload>
	</keyword>
	<keyword name="engine.camera.setLookAt" func="yes">
		<overload return-value="Void" descr="Set Camera Look At">
			<parameter name="Vector3 $lookAt" />
		</overload>
	</keyword>
	<keyword name="engine.camera.getLookFrom" func="yes">
		<overload return-value="Vector3" descr="Get Camera Look From">
		</overload>
	</keyword>
	<keyword name="engine.camera.setLookFrom" func="yes">
		<overload return-value="Void" descr="Set Camera Look From">
			<parameter name="Vector3 $lookFrom" />
		</overload>
	</keyword>
	<keyword name="engine.camera.getUpVector" func="yes">
		<overload return-value="Vector3" descr="Get Camera Up Vector">
		</overload>
	</keyword>
	<keyword name="engine.camera.setUpVector" func="yes">
		<overload return-value="Void" descr="Set Camera Up Vector">
			<parameter name="Vector3 $upVector" />
		</overload>
	</keyword>
	<keyword name="engine.camera.computeUpVector" func="yes">
		<overload return-value="Vector3" descr="Compute Camera Up Vector">
			<parameter name="Vector3 $lookFrom" />
			<parameter name="Vector3 $lookAt" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getAnimation" func="yes">
		<overload return-value="String" descr="Get Engine Entity Animation">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setAnimation" func="yes">
		<overload return-value="Void" descr="Set Engine Entity Animation">
			<parameter name="String $entityId" />
			<parameter name="String $animation" />
			<parameter name="[Float $speed]" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setAnimationSpeed" func="yes">
		<overload return-value="Void" descr="Get Engine Entity Animation Speed">
			<parameter name="String $entityId" />
			<parameter name="Float $speed" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getAnimationTime" func="yes">
		<overload return-value="Float" descr="Set Engine Entity Animation Speed">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getEffectColorAdd" func="yes">
		<overload return-value="Vector4" descr="Get Engine Entity Additive Effect Color">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setEffectColorAdd" func="yes">
		<overload return-value="Void" descr="Set Engine Entity Additive Effect Color">
			<parameter name="String $entityId" />
			<parameter name="Vector4 $effectColorAdd" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getEffectColorMul" func="yes">
		<overload return-value="Vector4" descr="Get Engine Entity Multiplicative Effect Color">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setEffectColorMul" func="yes">
		<overload return-value="Void" descr="Set Engine Entity Multiplicative Effect Color">
			<parameter name="String $entityId" />
			<parameter name="Vector4 $effectColorMul" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.isEnabled" func="yes">
		<overload return-value="Boolean" descr="Return if Engine Entity is enabled">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setEnabled" func="yes">
		<overload return-value="Void" descr="Set Engine Entity enabled/disabled">
			<parameter name="String $entityId" />
			<parameter name="Boolean $enabled" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getNodeTransform" func="yes">
		<overload return-value="Transform" descr="Get Engine Entity Node Transform">
			<parameter name="String $entityId" />
			<parameter name="String $nodeId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setNodeTransform" func="yes">
		<overload return-value="Void" descr="Set Engine Entity Node Transform">
			<parameter name="String $entityId" />
			<parameter name="String $nodeId" />
			<parameter name="Transform $transform" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.unsetNodeTransform" func="yes">
		<overload return-value="Void" descr="Unset Engine Entity Node Transform">
			<parameter name="String $entityId" />
			<parameter name="String $nodeId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getNodeTransformMatrix" func="yes">
		<overload return-value="Matrix4x4" descr="Get Engine Entity Node Transform Matrix">
			<parameter name="String $entityId" />
			<parameter name="String $nodeId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setNodeTransformMatrix" func="yes">
		<overload return-value="Void" descr="Set Engine Entity Node Transform Matrix">
			<parameter name="String $entityId" />
			<parameter name="String $nodeId" />
			<parameter name="Matrix4x4 $matrix" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.unsetNodeTransformMatrix" func="yes">
		<overload return-value="Void" descr="Unset Engine Entity Node Transform Matrix">
			<parameter name="String $entityId" />
			<parameter name="String $nodeId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.hasOverlayAnimation" func="yes">
		<overload return-value="Boolean" descr="Return if Engine Entity has specific Overlay Animation">
			<parameter name="String $entityId" />
			<parameter name="String $animation" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getOverlayAnimationTime" func="yes">
		<overload return-value="Float" descr="Return Engine Entity Overlay Animation Playback Time from 0.0 until 1.0">
			<parameter name="String $entityId" />
			<parameter name="String $animation" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.isPickable" func="yes">
		<overload return-value="Boolean" descr="Return if Engine Entity is Pickable">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setPickable" func="yes">
		<overload return-value="Void" descr="Set Engine Entity Pickable">
			<parameter name="String $entityId" />
			<parameter name="Boolean $pickable" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.getTransform" func="yes">
		<overload return-value="Transform" descr="Get Engine Entity Transform">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.setTransform" func="yes">
		<overload return-value="Void" descr="Set Engine Entity Transform">
			<parameter name="String $entityId" />
			<parameter name="Transform $transform" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.addOverlayAnimation" func="yes">
		<overload return-value="Void" descr="Add Engine Entity Overlay Animation">
			<parameter name="String $entityId" />
			<parameter name="String $animation" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.emitParticles" func="yes">
		<overload return-value="Integer" descr="Emit Engine Entity Particles">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.removeFinishedOverlayAnimations" func="yes">
		<overload return-value="Void" descr="Remove finished Overlay Animations">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.removeOverlayAnimation" func="yes">
		<overload return-value="Void" descr="Remove specific Overlay Animation">
			<parameter name="String $entityId" />
			<parameter name="String $animation" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.entity.removeOverlayAnimations" func="yes">
		<overload return-value="Void" descr="Remove Overlay Animations">
			<parameter name="String $entityId" />
			<parameter name="[String $childEntityId]" />
		</overload>
	</keyword>
	<keyword name="engine.timing.getAvarageFPS" func="yes">
		<overload return-value="Float" descr="Get Engine Timing Avarage FPS">
		</overload>
	</keyword>
	<keyword name="engine.timing.getDeltaTime" func="yes">
		<overload return-value="Integer" descr="Get Engine Timing Frame Delta Time in Milliseconds">
		</overload>
	</keyword>
	<keyword name="engine.timing.getDeltaTimeSeconds" func="yes">
		<overload return-value="Float" descr="Get Engine Timing Frame Delta Time in Seconds">
		</overload>
	</keyword>
	<keyword name="input.keyboard.isAltDown" func="yes">
		<overload return-value="Boolean" descr="Returns if ALT Key is currently pressed">
		</overload>
	</keyword>
	<keyword name="input.keyboard.isCharDown" func="yes">
		<overload return-value="Boolean" descr="Returns if specific Character is currently pressed">
			<parameter name="String $charAsString" />
		</overload>
	</keyword>
	<keyword name="input.keyboard.isControlDown" func="yes">
		<overload return-value="Boolean" descr="Returns if CONTROL Key is currently pressed">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_BACKSPACE" func="yes">
		<overload return-value="Integer" descr="Backspace Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_DELETE" func="yes">
		<overload return-value="Integer" descr="Delete Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_DOWN" func="yes">
		<overload return-value="Integer" descr="Down Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_END" func="yes">
		<overload return-value="Integer" descr="End Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_ESCAPE" func="yes">
		<overload return-value="Integer" descr="Escape Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F1" func="yes">
		<overload return-value="Integer" descr="F1 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F10" func="yes">
		<overload return-value="Integer" descr="F10 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F11" func="yes">
		<overload return-value="Integer" descr="F11 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F12" func="yes">
		<overload return-value="Integer" descr="F12 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F2" func="yes">
		<overload return-value="Integer" descr="F2 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F3" func="yes">
		<overload return-value="Integer" descr="F3 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F4" func="yes">
		<overload return-value="Integer" descr="F4 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F5" func="yes">
		<overload return-value="Integer" descr="F5 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F6" func="yes">
		<overload return-value="Integer" descr="F6 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F7" func="yes">
		<overload return-value="Integer" descr="F7 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F8" func="yes">
		<overload return-value="Integer" descr="F8 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_F9" func="yes">
		<overload return-value="Integer" descr="F9 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_LEFT" func="yes">
		<overload return-value="Integer" descr="Left Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_PAGEDOWN" func="yes">
		<overload return-value="Integer" descr="Page Down Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_PAGEUP" func="yes">
		<overload return-value="Integer" descr="Page Up Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_POS1" func="yes">
		<overload return-value="Integer" descr="Home/Position 1 Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_RETURN" func="yes">
		<overload return-value="Integer" descr="Return Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_RIGHT" func="yes">
		<overload return-value="Integer" descr="Right Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_SPACE" func="yes">
		<overload return-value="Integer" descr="Space Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.KEYCODE_UP" func="yes">
		<overload return-value="Integer" descr="Up Key Keycode">
		</overload>
	</keyword>
	<keyword name="input.keyboard.isKeyDown" func="yes">
		<overload return-value="Boolean" descr="Returns if specific Key is currently pressed">
			<parameter name="Integer $keyCode" />
		</overload>
	</keyword>
	<keyword name="input.keyboard.isMetaDown" func="yes">
		<overload return-value="Boolean" descr="Returns if Meta Key is currently pressed">
		</overload>
	</keyword>
	<keyword name="input.keyboard.isShiftDown" func="yes">
		<overload return-value="Boolean" descr="Returns if Shift Key is currently pressed">
		</overload>
	</keyword>
	<keyword name="input.keyboard.getTypedString" func="yes">
		<overload return-value="String" descr="Returns last typed String">
		</overload>
	</keyword>
	<keyword name="input.mouse.BUTTON_LEFT" func="yes">
		<overload return-value="Integer" descr="Left Mouse Button Integer Code">
		</overload>
	</keyword>
	<keyword name="input.mouse.BUTTON_MIDDLE" func="yes">
		<overload return-value="Integer" descr="Middle Mouse Button Integer Code">
		</overload>
	</keyword>
	<keyword name="input.mouse.BUTTON_RIGHT" func="yes">
		<overload return-value="Integer" descr="Right Mouse Button Integer Code">
		</overload>
	</keyword>
	<keyword name="input.mouse.isButtonDown" func="yes">
		<overload return-value="Boolean" descr="Returns if specific Mouse Button is currently pressed">
			<parameter name="Integer $button" />
		</overload>
	</keyword>
	<keyword name="input.mouse.isButtonUp" func="yes">
		<overload return-value="Boolean" descr="Returns if specific Mouse Button has been released">
			<parameter name="Integer $button" />
		</overload>
	</keyword>
	<keyword name="input.mouse.isDragging" func="yes">
		<overload return-value="Boolean" descr="Returns if Mouse is dragging currently">
			<parameter name="Integer $button" />
		</overload>
	</keyword>
	<keyword name="input.mouse.hasMoved" func="yes">
		<overload return-value="Boolean" descr="Returns if Mouse has been moved">
		</overload>
	</keyword>
	<keyword name="input.mouse.getWheelX" func="yes">
		<overload return-value="Float" descr="Returns current Value of X Axis Mouse Wheel">
		</overload>
	</keyword>
	<keyword name="input.mouse.getWheelY" func="yes">
		<overload return-value="Float" descr="Returns current Value of Y Axis Mouse Wheel">
		</overload>
	</keyword>
	<keyword name="input.mouse.getWheelZ" func="yes">
		<overload return-value="Float" descr="Returns current Value of Z Axis Mouse Wheel">
		</overload>
	</keyword>
	<keyword name="input.mouse.getX" func="yes">
		<overload return-value="Integer" descr="Get X Mouse Position">
		</overload>
	</keyword>
	<keyword name="input.mouse.getXUnscaled" func="yes">
		<overload return-value="Integer" descr="Get Unscaled X Mouse Position">
		</overload>
	</keyword>
	<keyword name="input.mouse.getY" func="yes">
		<overload return-value="Integer" descr="Get Y Mouse Position">
		</overload>
	</keyword>
	<keyword name="input.mouse.getYUnscaled" func="yes">
		<overload return-value="Integer" descr="Get Unscaled Y Mouse Position">
		</overload>
	</keyword>
	<keyword name="logic.has" func="yes">
		<overload return-value="Boolean" descr="Returns if Logic has Function">
			<parameter name="String $logicId" />
			<parameter name="String $function" />
		</overload>
	</keyword>
	<keyword name="logic.getHierarchyId" func="yes">
		<overload return-value="String" descr="Get Hierarchy Id">
		</overload>
	</keyword>
	<keyword name="logic.getHierarchyParentId" func="yes">
		<overload return-value="String" descr="Get Hierarchy Parent Id">
		</overload>
	</keyword>
	<keyword name="logic.getId" func="yes">
		<overload return-value="String" descr="Get Logic Id">
		</overload>
	</keyword>
	<keyword name="logic.call" func="yes">
		<overload return-value="Mixed" descr="Call specific Logic Function">
			<parameter name="String $logicId" />
			<parameter name="String $function" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="logic.signal.has" func="yes">
		<overload return-value="Boolean" descr="Returns if Signal has been sent">
		</overload>
	</keyword>
	<keyword name="logic.signal.getArgument" func="yes">
		<overload return-value="Mixed" descr="Get Signal Argument">
			<parameter name="Integer $argumentIndex" />
		</overload>
	</keyword>
	<keyword name="logic.signal.getName" func="yes">
		<overload return-value="String" descr="Get Signal Name">
		</overload>
	</keyword>
	<keyword name="logic.signal.next" func="yes">
		<overload return-value="Void" descr="Advance to next Signal">
		</overload>
	</keyword>
	<keyword name="logic.signal.send" func="yes">
		<overload return-value="Void" descr="Send Signal">
			<parameter name="String $logicId" />
			<parameter name="String $signal" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="pathfinding.STATE_IDLE" func="yes">
		<overload return-value="Integer" descr="Pathfinding Idle State Integer Code">
		</overload>
	</keyword>
	<keyword name="pathfinding.STATE_PATHFINDING" func="yes">
		<overload return-value="Integer" descr="Pathfinding Computing State Integer Code">
		</overload>
	</keyword>
	<keyword name="pathfinding.STATE_PATHFINDING_FAILED" func="yes">
		<overload return-value="Integer" descr="Pathfinding Failed State Integer Code">
		</overload>
	</keyword>
	<keyword name="pathfinding.STATE_PATHFINDING_OTHER" func="yes">
		<overload return-value="Integer" descr="Pathfinding Computing Other Pathfinding Integer Code">
		</overload>
	</keyword>
	<keyword name="pathfinding.STATE_PATHFINDING_SUCCESS" func="yes">
		<overload return-value="Integer" descr="Pathfinding Success State Integer Code">
		</overload>
	</keyword>
	<keyword name="pathfinding.STATE_TRYLOCK_FAILED" func="yes">
		<overload return-value="Integer" descr="Pathfinding Try/Lock Failed Integer Code">
		</overload>
	</keyword>
	<keyword name="pathfinding.findPath" func="yes">
		<overload return-value="Integer" descr="Issue Pathfinding">
			<parameter name="String $logicId" />
			<parameter name="Vector3 $startPosition" />
			<parameter name="Vector3 $endPosition" />
			<parameter name="Array =$path" />
		</overload>
	</keyword>
	<keyword name="scene.getDimensions" func="yes">
		<overload return-value="Vector3" descr="Get Scene Dimensions">
		</overload>
	</keyword>
	<keyword name="sceneconnector.addPrototype" func="yes">
		<overload return-value="Void" descr="Add Prototype using SceneConnector">
			<parameter name="String $pathName" />
			<parameter name="String $fileName" />
			<parameter name="String $id" />
			<parameter name="Transform $transform" />
			<parameter name="[String $hierarchyId]" />
			<parameter name="[String $hierarchyParentId]" />
		</overload>
	</keyword>
	<keyword name="sceneconnector.addPrototype2" func="yes">
		<overload return-value="Void" descr="Add Prototype using SceneConnector">
			<parameter name="String $pathName" />
			<parameter name="String $fileName" />
			<parameter name="String $id" />
			<parameter name="String $attachNodeId" />
			<parameter name="[String $hierarchyId]" />
			<parameter name="[String $hierarchyParentId]" />
		</overload>
	</keyword>
	<keyword name="world.body.getAngularDamping" func="yes">
		<overload return-value="Float" descr="Get Physics World Entity Angular Damping">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setAngularDamping" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity Angular Damping">
			<parameter name="String $bodyId" />
			<parameter name="Float $angularDamping" />
		</overload>
	</keyword>
	<keyword name="world.body.getAngularVelocity" func="yes">
		<overload return-value="Vector3" descr="Get Physics World Entity Angular Velocity">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setAngularVelocity" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity Angular Velocity">
			<parameter name="String $bodyId" />
			<parameter name="Vector3 $angularVelocity" />
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_10" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 10">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_11" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 11">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_12" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 12">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_13" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 13">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_14" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 14">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_15" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 15">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_16" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 16">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_3" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 3">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_4" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 4">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_5" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 5">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_6" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 6">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_7" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 7">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_8" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 8">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_9" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Collision Type Id 9">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_ALL" func="yes">
		<overload return-value="Integer" descr="Returns All Physics World Collision Type Ids">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_DYNAMIC" func="yes">
		<overload return-value="Integer" descr="Returns Dynamic Physics World Collision Type Id">
		</overload>
	</keyword>
	<keyword name="world.body.COLLISION_TYPEID_STATIC" func="yes">
		<overload return-value="Integer" descr="Returns Static Physics World Collision Type Id">
		</overload>
	</keyword>
	<keyword name="world.body.getCollisionTypeId" func="yes">
		<overload return-value="Integer" descr="Get Physics World Entity own Collision Type Id">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setCollisionTypeId" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity own Collision Type Id">
			<parameter name="String $bodyId" />
			<parameter name="Integer $collisionTypeId" />
		</overload>
	</keyword>
	<keyword name="world.body.getCollisionTypeIds" func="yes">
		<overload return-value="Integer" descr="Get Physics World Entity enabled Collision Type Ids">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setCollisionTypeIds" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity enabled Collision Type Ids">
			<parameter name="String $bodyId" />
			<parameter name="Integer $collisionTypeIds" />
		</overload>
	</keyword>
	<keyword name="world.body.isEnabled" func="yes">
		<overload return-value="Boolean" descr="Returns if Physics World Entity is enabled">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setEnabled" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity enabled/disabled">
			<parameter name="String $bodyId" />
			<parameter name="Boolean $enabled" />
		</overload>
	</keyword>
	<keyword name="world.body.getLinearDamping" func="yes">
		<overload return-value="Float" descr="Get Physics World Entity Linear Damping">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setLinearDamping" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity Linear Damping">
			<parameter name="String $bodyId" />
			<parameter name="Float $linearDamping" />
		</overload>
	</keyword>
	<keyword name="world.body.getLinearVelocity" func="yes">
		<overload return-value="Vector3" descr="Get Physics World Entity Linear Velocity">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setLinearVelocity" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity Linear Velocity">
			<parameter name="String $bodyId" />
			<parameter name="Vector3 $linearVelocity" />
		</overload>
	</keyword>
	<keyword name="world.body.TYPE_COLLISION_DYNAMIC" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Dynamic Collision Body Type Integer Code">
		</overload>
	</keyword>
	<keyword name="world.body.TYPE_COLLISION_STATIC" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Static Collision Body Type Integer Code">
		</overload>
	</keyword>
	<keyword name="world.body.TYPE_DYNAMIC" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Dynamic Rigid Body Type Integer Code">
		</overload>
	</keyword>
	<keyword name="world.body.TYPE_STATIC" func="yes">
		<overload return-value="Integer" descr="Returns Physics World Static Rigid Body Type Integer Code">
		</overload>
	</keyword>
	<keyword name="world.body.getTransform" func="yes">
		<overload return-value="Transform" descr="Get Physics World Entity Transform">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.setTransform" func="yes">
		<overload return-value="Void" descr="Set Physics World Entity Transform">
			<parameter name="String $bodyId" />
			<parameter name="Transform $transform" />
		</overload>
	</keyword>
	<keyword name="world.body.getType" func="yes">
		<overload return-value="Integer" descr="Get Physics World Entity Body Type Integer Code">
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="world.body.addForce" func="yes">
		<overload return-value="Void" descr="Add Force to Physics World Entity">
			<parameter name="String $bodyId" />
			<parameter name="Vector3 $force" />
			<parameter name="[Vector3 $origin]" />
		</overload>
	</keyword>
	<keyword name="world.body.addTorque" func="yes">
		<overload return-value="Void" descr="Add Torque to Physics World Entity">
			<parameter name="String $bodyId" />
			<parameter name="Vector3 $torque" />
		</overload>
	</keyword>
	<keyword name="world.determineHeight" func="yes">
		<overload return-value="Boolean" descr="Determine Height at specific Position in Physics World">
			<parameter name="Integer $collisionTypeIds" />
			<parameter name="Float $stepUpMax" />
			<parameter name="Vector3 $point" />
			<parameter name="Vector3 =$heightPoint" />
			<parameter name="[String =$bodyId]" />
			<parameter name="[Float $minHeight]" />
			<parameter name="[Float $maxHeight]" />
		</overload>
	</keyword>
	<keyword name="world.doCollide" func="yes">
		<overload return-value="Boolean" descr="Determine Collision of Two Specific Bodies in Physics World">
			<parameter name="String $bodyId1" />
			<parameter name="String $bodyId2" />
		</overload>
	</keyword>
	<keyword name="world.doRayCasting" func="yes">
		<overload return-value="Boolean" descr="Compute Ray Casting in Physics World">
			<parameter name="Integer $collisionTypeIds" />
			<parameter name="Vector3 $start" />
			<parameter name="Vector3 $end" />
			<parameter name="Vector3 =$hitPoint" />
			<parameter name="[String =$bodyId]" />
			<parameter name="[String $actorId]" />
		</overload>
	</keyword>
	<keyword name="world.doesCollideWith" func="yes">
		<overload return-value="Array" descr="Determine Collision of Specific Body in Physics World">
			<parameter name="Integer $collisionTypeIds" />
			<parameter name="String $bodyId" />
		</overload>
	</keyword>
	<keyword name="gui.elementnode.conditions.has" func="yes">
		<overload return-value="Boolean" descr="Returns if GUI Element Node has a specific Condition enabled">
			<parameter name="String $elementNodeId" />
			<parameter name="String $condition" />
		</overload>
	</keyword>
	<keyword name="gui.elementnode.conditions.get" func="yes">
		<overload return-value="Array" descr="Get enabled GUI Element Node Conditions">
			<parameter name="String $elementNodeId" />
		</overload>
	</keyword>
	<keyword name="gui.elementnode.conditions.set" func="yes">
		<overload return-value="Void" descr="Set enabled GUI Element Node Condition">
			<parameter name="String $elementNodeId" />
			<parameter name="String $condition" />
		</overload>
	</keyword>
	<keyword name="gui.elementnode.conditions.setAll" func="yes">
		<overload return-value="Void" descr="Set Array of enabled GUI Element Node Conditions">
			<parameter name="String $elementNodeId" />
			<parameter name="Array $conditions" />
		</overload>
	</keyword>
	<keyword name="gui.elementnode.conditions.add" func="yes">
		<overload return-value="Void" descr="Add enabled GUI Element Node Condition">
			<parameter name="String $elementNodeId" />
			<parameter name="String $condition" />
		</overload>
	</keyword>
	<keyword name="gui.elementnode.conditions.remove" func="yes">
		<overload return-value="Void" descr="Remove enabled GUI Element Node Condition">
			<parameter name="String $elementNodeId" />
			<parameter name="String $condition" />
		</overload>
	</keyword>
	<keyword name="gui.elementnode.conditions.removeAll" func="yes">
		<overload return-value="Void" descr="Remove All enabled GUI Element Node Conditions">
			<parameter name="String $elementNodeId" />
		</overload>
	</keyword>
	<keyword name="gui.event.ACTIONTYPE_PERFORMED" func="yes">
		<overload return-value="Integer" descr="Returns GUI Event Performed Action Type Integer Code">
		</overload>
	</keyword>
	<keyword name="gui.event.ACTIONTYPE_PERFORMING" func="yes">
		<overload return-value="Integer" descr="Returns GUI Event Performing Action Type Integer Code">
		</overload>
	</keyword>
	<keyword name="gui.imagenode.getSource" func="yes">
		<overload return-value="String" descr="Get Image Source of GUI Image Node">
			<parameter name="String $imageNodeId" />
		</overload>
	</keyword>
	<keyword name="gui.imagenode.setSource" func="yes">
		<overload return-value="Void" descr="Set Image Source of GUI Image Node">
			<parameter name="String $imageNodeId" />
			<parameter name="String $source" />
		</overload>
	</keyword>
	<keyword name="gui.node.controller.getValue" func="yes">
		<overload return-value="String" descr="Get GUI Node Controller Value">
			<parameter name="String $nodeId" />
		</overload>
	</keyword>
	<keyword name="gui.node.controller.setValue" func="yes">
		<overload return-value="Void" descr="Set GUI Node Controller Value">
			<parameter name="String $nodeId" />
			<parameter name="String $value" />
		</overload>
	</keyword>
	<keyword name="gui.parentnode.addSubNodes" func="yes">
		<overload return-value="Void" descr="Add Sub Nodes using XML to GUI Parent Node">
			<parameter name="String $parentNodeId" />
			<parameter name="String $xml" />
			<parameter name="[Boolean $resetScrollOffsets]" />
		</overload>
	</keyword>
	<keyword name="gui.parentnode.clearSubNodes" func="yes">
		<overload return-value="Void" descr="Clear Sub Nodes of GUI Parent Node">
			<parameter name="String $parentNodeId" />
		</overload>
	</keyword>
	<keyword name="gui.parentnode.replaceSubNodes" func="yes">
		<overload return-value="Void" descr="Replace Sub Nodes using XML of GUI Parent Node">
			<parameter name="String $parentNodeId" />
			<parameter name="String $xml" />
			<parameter name="[Boolean $resetScrollOffsets]" />
		</overload>
	</keyword>
	<keyword name="gui.screen.isEnabled" func="yes">
		<overload return-value="Boolean" descr="Return if GUI Screen is enabled">
			<parameter name="String $screenId" />
		</overload>
	</keyword>
	<keyword name="gui.screen.setEnabled" func="yes">
		<overload return-value="Void" descr="Set GUI Screen enabled/disabled">
			<parameter name="String $screenId" />
			<parameter name="Boolean $enabled" />
		</overload>
	</keyword>
	<keyword name="gui.screen.call" func="yes">
		<overload return-value="Mixed" descr="Call specific Screen Logic Function">
			<parameter name="String $screenId" />
			<parameter name="String $function" />
			<parameter name="..." />
		</overload>
	</keyword>
	<keyword name="gui.screen.goto" func="yes">
		<overload return-value="Void" descr="Goto current Screen to specific Screen">
			<parameter name="String $fileName" />
			<parameter name="[Map $variables]" />
			<parameter name="[Mixed $arguments]" />
		</overload>
	</keyword>
	<keyword name="gui.screen.pop" func="yes">
		<overload return-value="Void" descr="Pop current Screen from Screen Stack">
		</overload>
	</keyword>
	<keyword name="gui.screen.push" func="yes">
		<overload return-value="Void" descr="Push Screen to current Screen Stack">
			<parameter name="String $fileName" />
			<parameter name="[Map $variables]" />
			<parameter name="[Mixed $arguments]" />
		</overload>
	</keyword>
	<keyword name="gui.screennode.getId" func="yes">
		<overload return-value="String" descr="Get Current Screen Node Id">
		</overload>
	</keyword>
	<keyword name="gui.textnode.getText" func="yes">
		<overload return-value="String" descr="Get Text of GUI Text Node">
			<parameter name="String $textNodeId" />
		</overload>
	</keyword>
	<keyword name="gui.textnode.setText" func="yes">
		<overload return-value="Void" descr="Set Text of GUI Text Node">
			<parameter name="String $textNodeId" />
			<parameter name="String $text" />
		</overload>
	</keyword>
	<keyword name="gui.videonode.getSource" func="yes">
		<overload return-value="String" descr="Get Video Source of GUI Video Node">
			<parameter name="String $videoNodeId" />
		</overload>
	</keyword>
	<keyword name="gui.videonode.setSource" func="yes">
		<overload return-value="Void" descr="Set Video Source of GUI Video Node">
			<parameter name="String $videoNodeId" />
			<parameter name="String $source" />
		</overload>
	</keyword>
</code-completion>
